{"version":3,"sources":["components/presets.js","components/common.js","components/networkTab.js","components/addonsTab.js","components/clusterTab.js","components/deployTab.js","components/appsTab.js","components/portalnav.js","App.js","serviceWorker.js","index.js"],"names":["iconClass","mergeStyles","fontSize","margin","sections","selectedValues","updateSelected","featureFlag","map","s","Separator","styles","root","marginTop","marginBottom","sectionTitle","key","sectionWarning","MessageBar","messageBarType","MessageBarType","severeWarning","Stack","horizontal","tokens","childrenGap","cards","c","i","DocumentCard","onClick","childrenMargin","DocumentCardDetails","padding","position","Checkbox","inputProps","checked","label","title","fontWeight","imageSrc","DocumentCardImage","backgroundColor","height","imageFit","ImageFit","centerContain","icon","DocumentCardPreview","borderBottom","previewImages","previewIconProps","iconName","className","style","Text","description","titleWarning","variant","paddingInlineStart","bulets","filter","b","hasOwnProperty","includes","linksrc","target","href","author","DocumentCardActivity","activity","status","people","name","initials","hasError","array","field","findIndex","e","getError","idx","message","adv_stackstyle","border","background","CodeBlock","deploycmd","testId","useState","copied","setCopied","CommandBarButton","disabled","iconProps","color","text","navigator","clipboard","writeText","setTimeout","columnProps","minWidth","NetworkTab","tabValues","updateFn","invalidArray","callout1","setCallout1","net","addons","_calloutTarget1","React","createRef","Item","Label","required","ChoiceGroup","marginLeft","selectedKey","networkPlugin","options","onChange","ev","error","errorMessage","afw","v","vnetprivateend","bastion","ref","vnet_opt","Callout","directionalHint","DirectionalHint","leftCenter","isBeakVisible","gapSpace","setInitialFocus","onDismiss","info","maxWidth","warning","Link","Image","CenterContain","width","src","CustomVNET","BYOVNET","PodServiceNetwork","align","TextField","prefix","val","value","podCidr","serviceCidr","dnsServiceIP","byoAKSSubnetId","placeholder","ingress","byoAGWSubnetId","vnetAddressPrefix","vnetAksSubnetAddressPrefix","vnetFirewallSubnetAddressPrefix","vnetAppGatewaySubnetAddressPrefix","registry","acrPrivatePool","acrAgentPoolSubnetAddressPrefix","bastionSubnetAddressPrefix","privateLinkSubnetAddressPrefix","monitor","Dropdown","retentionInDays","createAksMetricAlerts","azurepolicy","success","networkPolicy","display","denydefaultNetworkPolicy","ingressEveryNode","appgwKVIntegration","appGWsku","appGWenableFirewall","appGwFirewallMode","appGWautoscale","Slider","min","max","step","defaultValue","appGWcount","showValue","appGWmaxCount","snapToStep","appgw_privateIp","appgw_privateIpAddress","dns","dnsZoneId","certMan","certEmail","csisecret","kvId","optionRootClass","alignItems","VMs","itemType","DropdownMenuItemType","Header","eph","cluster","defenderFeatureFlag","vertical","AksPaidSkuForSLA","SystemPoolType","autoscale","agentCount","maxCount","vmSize","dropdown","osDiskType","osDiskSizeGB","availabilityZones","upgradeChannel","id","enable_aad","use_alt_aad","onRenderField","props","render","aad_tenant_id","enableAzureRBAC","onRenderLabel","aadgroupids","AksDisableLocalAccounts","apisecurity","privateDNSZone","DefenderForContainers","DeployTab","p","defaults","invalidTabs","urlParams","deploy","allok","length","apiips_array","apiips","split","x","trim","aksvnetparams","serviceparams","params","resourceName","clusterName","kubernetesVersion","JustUseSystemPool","agentVMSize","agentCountMax","custom_vnet","clusterAdminRole","adminprincipleid","registries_sku","acrPushRole","acrPushRolePrincipalId","azureFirewalls","certManagerFW","privateLinks","kvIPAllowlist","omsagent","clusterIPWhitelist","authorizedIPRanges","enablePrivateCluster","ingressApplicationGateway","privateIpApplicationGateway","azureKeyvaultSecretsProvider","createKV","kvCertSecretRole","kvOfficerRolePrincipalId","preview_params","gitops","getAll","finalParams","disablePreviews","aks","agw","location","rg","process","Object","keys","k","targetVal","Array","isArray","JSON","stringify","join","param_file","reduce","a","parameters","params2file","replaceAll","prometheus_namespace","prometheus_helm_release_name","nginx_namespace","EXTERNAL_DNS_REGISTRY","EXTERNAL_DNS_REPO","postscript","marginRight","readOnly","Toggle","onText","offText","Pivot","PivotItem","headerText","toString","fontFamily","lineHeight","multiline","rows","AppsTab","entScale","setEntScale","alt","rel","nowrap","TooltipHost","content","Icon","PortalNav","config","console","log","componentName","tabLabels","entScaleOps","defaultOps","pivotkey","setPivotkey","useEffect","start","Date","pagename","appInsights","startTrackPage","stopTrackPage","mounttime","URLSearchParams","window","search","setUrlParams","setInvalidArray","has","values","get","find","default","selected","setSelected","Math","floor","random","tabApplySections","acc","curr","updateTabValues","dynamicApplySections","acct","currt","accv","currv","urlname","valres","isNaN","parseInt","setTabValues","currenttabValues","sectionKey","cardKey","card_values","undefined","page","set","mergeState","tab","invalidFn","invalid","prev","concat","fetch","then","response","json","res","currentTabValues","ip","catch","err","_customRenderer","link","defaultRenderer","match","ThemeProvider","verticalFill","currentUrlParams","forEach","element","delete","onLinkClick","item","itemKey","focusZoneProps","onRenderItemLink","t","app","App","ConfigContext","Consumer","initializeIcons","Boolean","hostname","ApplicationInsights","instrumentationKey","createContext","ReactDOM","Provider","configData","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c34335a.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { MessageBar, DocumentCardActivity, DocumentCardImage, Text, DocumentCardPreview, mergeStyles, Separator, DocumentCard, DocumentCardDetails, Stack, Checkbox, ImageFit, MessageBarType } from '@fluentui/react';\n\nconst iconClass = mergeStyles({\n    fontSize: 80,\n    margin: '0 80px'\n});\n\n\nexport default function ({ sections, selectedValues, updateSelected, featureFlag }) {\n\n    return sections.map(s => [\n\n\n        <Separator key={`sep${s.key}`} styles={{ root: { marginTop: \"15px !important\", marginBottom: \"15px\" } }}><b>{s.sectionTitle}</b></Separator>,\n        <div key={`warn${s.key}`}>\n            {s.sectionWarning &&\n                <MessageBar key={`messg${s.key}`} styles={{ root: { marginBottom: \"15px\", fontSize: \"15px\" } }} messageBarType={MessageBarType.severeWarning}>{s.sectionWarning}</MessageBar>\n            }\n        </div>,\n        <Stack key={`stack${s.key}`} horizontal tokens={{ childrenGap: 15 }}>\n            {s.cards.map((c, i) =>\n                <DocumentCard  key={c.key}   onClick={() => updateSelected(s.key, c.key)} tokens={{ childrenMargin: 12 }}>\n\n                    <DocumentCardDetails styles={{ root: { padding: \"8px 16px\", position: \"relative\" } }}>\n                        <Checkbox inputProps={{ 'data-testid': `portalnav-presets-${s.key}-${c.key}-Checkbox`}} checked={selectedValues[s.key] === c.key} label={c.title} styles={{ label: { fontWeight: selectedValues[s.key] === c.key ? '500' : 'normal' } }} />\n                    </DocumentCardDetails>\n\n                    {c.imageSrc &&\n                        <DocumentCardImage styles={{ root: { backgroundColor: \"white\" } }} imageSrc={c.imageSrc} height={150} imageFit={ImageFit.centerContain} />\n                    }\n                    {c.icon &&\n                        <DocumentCardPreview styles={{ root: { backgroundColor: 'white', borderBottom: '0' } }} previewImages={[{\n                            previewIconProps: {\n                                iconName: c.icon, className: iconClass\n                            }, height: 100\n                        },]} />\n                    }\n\n                    <div style={{ padding: \"8px 16px\" }} >\n                        <Text >{c.description.title}\n                            {c.description.titleWarning &&\n                                <MessageBar messageBarType={c.description.titleWarning.MessageBarType}>\n                                    <Text >{c.description.titleWarning.description}</Text>\n                                </MessageBar>\n\n                            }\n                            <Text variant=\"smallPlus\" >\n                                <ul style={{ paddingInlineStart: \"20px\" }}>\n                                    {c.description.bulets.filter(b=> !b.hasOwnProperty('featureFlag') || featureFlag.includes(b.featureFlag) ).map((b, i) =>\n                                        <li key={i}>\n                                            {b.description}\n                                            {b.linksrc && <span> (<a target=\"_nsg\" href={b.linksrc}>docs</a>)</span>}\n                                        </li>\n                                    )}\n                                </ul>\n                            </Text>\n                        </Text>\n                    </div>\n\n                    {c.author &&\n                        <DocumentCardActivity activity={c.author.status} people={[{ name: c.author.name, initials: c.author.initials }]} />\n                    }\n                </DocumentCard>\n            )}\n        </Stack>\n    ])\n}","import React, {useState} from 'react';\nimport {CommandBarButton} from '@fluentui/react'\n\nexport function arrayAdd(array, key) {\n    return array.includes(key) ? array : array.concat(key)\n}\nexport function arrayDel(array, key) {\n    const idx = array.indexOf(key)\n    return idx >= 0 ? [...array.slice(0, idx), ...array.slice(idx + 1)] : array\n}\n\nexport function hasError(array, field) {\n    return array.findIndex(e => e.field === field) >= 0\n}\n\nexport function getError(array, field) {\n    const idx = array.findIndex(e => e.field === field)\n    return idx >= 0 ? array[idx].message : ''\n}\n\nexport const adv_stackstyle = { root: { border: \"1px solid\", background: \"#fcfcfc\", margin: \"10px 0\", padding: \"15px\" } }\n\n\nexport function CodeBlock({deploycmd, testId}) {\n    const [ copied, setCopied ] = useState(false)\n\n    function copyIt() {\n        navigator.clipboard.writeText(deploycmd)\n        setCopied(true)\n        setTimeout(() => setCopied(false), 1000)\n    }\n\n    return [\n        <div key=\"code-header\" className=\"codeHeader\" >\n            <span className=\"language\">Bash</span>\n            <CommandBarButton disabled={copied} className=\"action position-relative\" iconProps={{ iconName: copied? 'Completed' : 'Copy'}} styles={{icon: {color: '#171717'}}} text=\"Copy\" onClick={copyIt}/>\n        </div>,\n\n        <pre key=\"code-pre\" className=\"has-inner-focus\">\n            <code className=\"lang-bash\"><span data-testid={testId || 'none'}>{deploycmd}</span></code>\n        </pre>\n    ]\n}\n\n","\nimport React, { useState } from 'react';\nimport { Image, ImageFit, Link, Separator, TextField, DirectionalHint, Callout, Stack, Text, Label, ChoiceGroup, Checkbox, MessageBar, MessageBarType } from '@fluentui/react';\nimport { adv_stackstyle, hasError, getError } from './common'\n\nconst columnProps = {\n    tokens: { childrenGap: 20 },\n    styles: { root: { minWidth: 380 } }\n}\n\n\nexport default function NetworkTab ({ tabValues, updateFn, invalidArray, featureFlag }) {\n\n    const [callout1, setCallout1] = useState(false)\n\n    const { net, addons } = tabValues\n    var _calloutTarget1 = React.createRef()\n\n    return (\n        <Stack tokens={{ childrenGap: 15 }} styles={adv_stackstyle}>\n\n            <Stack.Item>\n                <Label required={true}>Network Plugin</Label>\n                <MessageBar>Typically, only use \"kubenet\" networking if you need to limit your non-routable IP usage on your network (use network calculator)\n                </MessageBar>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={net.networkPlugin}\n                    options={[\n                        { key: 'kubenet', text: 'Use \"kubenet\" basic networking, so your PODs DO NOT receive VNET IPs' },\n                        { key: 'azure', text: 'Use \"CNI\" for fastest container networking, but using more IPs' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"networkPlugin\", key)}\n                />\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item>\n                <Label>Deploy Azure firewall for your cluster egress (Custom VNet Only)</Label>\n                {hasError(invalidArray, 'afw') &&\n                    <MessageBar messageBarType={MessageBarType.error}>{getError(invalidArray, 'afw')}</MessageBar>\n                }\n                <Checkbox styles={{ root: { marginLeft: '50px', marginTop: '10 !important' } }} disabled={false} errorMessage={getError(invalidArray, 'afw')} checked={net.afw} onChange={(ev, v) => updateFn(\"afw\", v)} label=\"Implement Azure Firewall & UDR next hop\" />\n\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item>\n                <Label>Uses a private IP address from your VNet to access your dependent Azure service, such as Azure KeyVault, Azure Container Registry etc</Label>\n                <Checkbox styles={{ root: { marginLeft: '50px', marginTop: '0 !important' } }} disabled={false} checked={net.vnetprivateend} onChange={(ev, v) => updateFn(\"vnetprivateend\", v)} label=\"Enable Private Link\" />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Label>Use Azure Bastion to facilitate RDP/SSH public internet inbound access into your virtual network</Label>\n                <Checkbox inputProps={{ \"data-testid\": \"network-bastion-Checkbox\"}} styles={{ root: { marginLeft: '50px', marginTop: '0 !important' } }} disabled={false} checked={net.bastion} onChange={(ev, v) => updateFn(\"bastion\", v)} label=\"Enable Azure Bastion\" />\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item>\n                <Stack horizontal>\n                    <Stack.Item>\n                        <Label>Default or Custom VNET</Label>\n                        <div ref={_calloutTarget1} style={{ marginTop: 0 }}>\n                            <ChoiceGroup\n                                styles={{ root: { marginLeft: '50px' } }}\n                                selectedKey={net.vnet_opt}\n                                onClick={() => setCallout1(true)}\n                                onChange={(ev, { key }) => updateFn(\"vnet_opt\", key)}\n                                options={[\n                                    {\n                                        key: 'default',\n                                        iconProps: { iconName: 'CubeShape' },\n                                        text: 'Default Networking'\n                                    },\n                                    {\n                                        key: 'custom',\n                                        iconProps: { iconName: 'CityNext' }, // SplitObject\n                                        text: 'Custom Networking'\n                                    },\n                                    {\n                                        key: 'byo',\n                                        disabled: false,\n                                        iconProps: { iconName: 'WebAppBuilderFragment' }, // SplitObject\n                                        text: 'BYO VNET (TBC)'\n                                    }\n                                ]}\n                            />\n                            {hasError(invalidArray, 'vnet_opt') &&\n                                <MessageBar messageBarType={MessageBarType.error}>{getError(invalidArray, 'vnet_opt')}</MessageBar>\n                            }\n                        </div>\n                    </Stack.Item>\n                    <Stack.Item>\n                        {callout1 && net.vnet_opt === 'default' && (\n                            <Callout\n                                className=\"ms-CalloutExample-callout\"\n                                target={_calloutTarget1}\n                                directionalHint={DirectionalHint.leftCenter}\n                                isBeakVisible={true}\n                                gapSpace={10}\n                                setInitialFocus={true}\n                                onDismiss={() => setCallout1(false)}>\n\n                                <MessageBar messageBarType={MessageBarType.info}>Default - Fully Managed Networking</MessageBar>\n                                <div style={{ padding: \"10px\", maxWidth: \"450px\" }}>\n                                    <Text >\n                                        Select this option if you <Text style={{ fontWeight: \"bold\" }} > don't</Text> require any custom IP settings, so you are not peering with other VNETs or On-Premises networks\n                                        This is the simplest AKS deployment to operate, it provides a <Text style={{ fontWeight: \"bold\" }} > managed</Text> network setup, including:\n                                    </Text>\n                                    <ul>\n                                        <li>New Dedicated VNET with private IP range for your agents nodes</li>\n                                        <li>Container Networking (default: CNI)</li>\n                                        <li>Standard LoadBalancer for kubernetes services with outbound rule for internet access</li>\n                                    </ul>\n                                </div>\n                            </Callout>\n                        )}\n\n\n                        {callout1 && net.vnet_opt === 'custom' && (\n                            <Callout\n                                className=\"ms-CalloutExample-callout\"\n                                target={_calloutTarget1}\n                                directionalHint={DirectionalHint.leftCenter}\n                                isBeakVisible={true}\n                                gapSpace={10}\n                                setInitialFocus={true}\n                                onDismiss={() => setCallout1(false)}>\n\n                                <MessageBar messageBarType={MessageBarType.warning}>Custom Networking - Advanced Setup</MessageBar>\n                                <div style={{ padding: \"10px\", maxWidth: \"500px\" }}>\n                                    <Text >\n                                        Select this option if you will you would like the helper to create a new VNET with specific ranges, use this option if you need to:\n                                        <ul>\n                                            <li>Connect your AKS network with another networks</li>\n                                            <li>You will be VNET peering or using an ExpressRoute or VPN Gateway</li>\n                                        </ul>\n                                    </Text>\n                                </div>\n                            </Callout>\n                        )}\n\n                        {callout1 && net.vnet_opt === 'byo' && (\n                            <Callout\n                                className=\"ms-CalloutExample-callout\"\n                                target={_calloutTarget1}\n                                directionalHint={DirectionalHint.leftCenter}\n                                isBeakVisible={true}\n                                gapSpace={10}\n                                setInitialFocus={true}\n                                onDismiss={() => setCallout1(false)}>\n\n                                <MessageBar messageBarType={MessageBarType.warning}>Bring your own Networking - Advanced Setup</MessageBar>\n                                <div style={{ padding: \"10px\", maxWidth: \"500px\" }}>\n                                    <Text >\n                                        Select this option if you will be deploying AKS into an existing network configuration, for example.\n                                    </Text>\n\n                                    <ul>\n                                        <li>If you are implementing the Secure Baseline Architecture <Link target=\"_\" href=\"https://docs.microsoft.com/azure/architecture/reference-architectures/containers/aks/secure-baseline-aks\">here</Link>\n                                            <Image imageFit={ImageFit.CenterContain} width=\"100%\" src=\"./secure-baseline-architecture.svg\" /></li>\n                                        <li>If you will deploy AKS into a pre-existing VNET, managed by a networking team</li>\n                                    </ul>\n                                </div>\n                            </Callout>\n                        )}\n                    </Stack.Item>\n                </Stack>\n            </Stack.Item>\n\n\n\n            {net.vnet_opt === 'custom' ?\n                <CustomVNET addons={addons} net={net} updateFn={updateFn} />\n                : net.vnet_opt === 'byo' &&\n                <BYOVNET addons={addons} net={net} updateFn={updateFn} invalidArray={invalidArray} />\n            }\n        </Stack>\n    )\n}\n\nfunction PodServiceNetwork({ net, updateFn }) {\n    return (\n        <Stack {...columnProps}>\n            <Label>Kubernetes Networking Configuration</Label>\n            <Stack.Item styles={{root: {width: '380px'}}} align=\"start\">\n                <TextField  prefix=\"Cidr\" label=\"POD Network\" disabled={net.networkPlugin !== 'kubenet'} onChange={(ev, val) => updateFn(\"podCidr\", val)} value={net.networkPlugin === 'kubenet' ? net.podCidr : \"Using CNI, POD IPs from subnet\"} />\n            </Stack.Item>\n            <Stack.Item styles={{root: {width: '380px'}}} align=\"start\">\n                <TextField prefix=\"Cidr\" label=\"Service Network\" onChange={(ev, val) => updateFn(\"serviceCidr\", val)} value={net.serviceCidr} />\n                <MessageBar messageBarType={MessageBarType.warning}>Address space that isn't in use elsewhere in your network environment <a target=\"_target\" href=\"https://docs.microsoft.com/en-us/azure/aks/configure-kubenet#create-an-aks-cluster-in-the-virtual-network\">docs</a></MessageBar>\n            </Stack.Item>\n            <Stack.Item styles={{root: {width: '380px'}}} align=\"start\">\n                <TextField prefix=\"IP\" label=\"Service Network\" onChange={(ev, val) => updateFn(\"dnsServiceIP\", val)} value={net.dnsServiceIP} />\n                <MessageBar messageBarType={MessageBarType.warning}>Ensure its an address within the Service CIDR above <a target=\"_target\" href=\"https://docs.microsoft.com/en-us/azure/aks/configure-kubenet#create-an-aks-cluster-in-the-virtual-network\">docs</a></MessageBar>\n            </Stack.Item>\n\n        </Stack>\n    )\n}\n\nfunction BYOVNET({ net, addons, updateFn, invalidArray }) {\n    return (\n\n        <Stack styles={adv_stackstyle}>\n\n            <Label>Bring your Own VNET and Subnets</Label>\n            <MessageBar>Get your user subnet by running <Label>az network vnet subnet show --vnet-name `{'<net name>'}` -g `{'<vnet rg>'}` -n `{'<subnet name>'}` --query \"id\"</Label></MessageBar>\n            <TextField value={net.byoAKSSubnetId} onChange={(ev, v) => updateFn(\"byoAKSSubnetId\", v)} errorMessage={getError(invalidArray, 'byoAKSSubnetId')} required placeholder=\"Resource Id\" label={<Text style={{ fontWeight: 600 }}>Enter your existing AKS Nodes subnet ResourceId</Text>} />\n\n            <Separator className=\"notopmargin\" />\n\n\n            <TextField disabled={addons.ingress !== 'appgw'} value={net.byoAGWSubnetId} onChange={(ev, v) => updateFn(\"byoAGWSubnetId\", v)} errorMessage={getError(invalidArray, 'byoAGWSubnetId')} required placeholder=\"Resource Id\" label={<Text style={{ fontWeight: 600 }}>Enter your existing Application Gateway subnet ResourceId</Text>} />\n            <MessageBar messageBarType={MessageBarType.warning}>Ensure your Application Gateway subnet meets these requirements <Link href=\"https://docs.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#size-of-the-subnet\">here</Link></MessageBar>\n\n            <Separator/>\n            <PodServiceNetwork net={net} updateFn={updateFn} />\n\n        </Stack>\n    )\n}\n\n\nfunction CustomVNET({ net, addons, updateFn }) {\n    return (\n        <Stack styles={adv_stackstyle}>\n            <Label>Custom Network VNET & Kubernetes Network Configuration</Label>\n            <Stack horizontal tokens={{ childrenGap: 50 }} styles={{ root: { width: 650 } }}>\n                <Stack {...columnProps}>\n\n                    <Stack.Item align=\"start\">\n                        <TextField prefix=\"Cidr\" label=\"VNET Address space\" onChange={(ev, val) => updateFn(\"vnetAddressPrefix\", val)} value={net.vnetAddressPrefix} />\n                    </Stack.Item>\n                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                        <TextField prefix=\"Cidr\" label=\"AKS Nodes subnet\" onChange={(ev, val) => updateFn(\"vnetAksSubnetAddressPrefix\", val)} value={net.vnetAksSubnetAddressPrefix} />\n                    </Stack.Item>\n                    {/*\n                <Stack.Item align=\"center\">\n                  <TextField prefix=\"Cidr\" label=\"LoadBalancer Services subnet\" onChange={(ev, val) => updateFn(\"ilbsub\", val)} value={net.ilbsub} />\n                </Stack.Item>\n                */}\n                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                        <TextField prefix=\"Cidr\" disabled={!net.afw} label=\"Azure Firewall subnet\" onChange={(ev, val) => updateFn(\"vnetFirewallSubnetAddressPrefix\", val)} value={net.afw ? net.vnetFirewallSubnetAddressPrefix : \"No Firewall requested\"} />\n                    </Stack.Item>\n\n                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                        <TextField prefix=\"Cidr\" disabled={addons.ingress !== 'appgw'} label=\"Application Gateway subnet\" onChange={(ev, val) => updateFn(\"vnetAppGatewaySubnetAddressPrefix\", val)} value={addons.ingress === 'appgw' ? net.vnetAppGatewaySubnetAddressPrefix : \"No Application Gateway requested\"} />\n                        <MessageBar messageBarType={MessageBarType.warning}>Ensure your Application Gateway subnet meets <Link href=\"https://docs.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#size-of-the-subnet\">these</Link> requirements</MessageBar>\n                    </Stack.Item>\n\n                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                        <TextField prefix=\"Cidr\" disabled={!net.vnetprivateend || addons.registry === \"none\" || !addons.acrPrivatePool  } label=\"ACR Private Agent Pool subnet\" onChange={(ev, val) => updateFn(\"acrAgentPoolSubnetAddressPrefix\", val)} value={net.vnetprivateend && addons.registry !== \"none\" && addons.acrPrivatePool  ? net.acrAgentPoolSubnetAddressPrefix : \"No Agent Pool requested\"} />\n                    </Stack.Item>\n\n                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                        <TextField prefix=\"Cidr\" disabled={!net.bastion} label=\"Azure Bastion subnet\" onChange={(ev, val) => updateFn(\"bastionSubnetAddressPrefix\", val)} value={net.bastion ? net.bastionSubnetAddressPrefix : \"No bastion subnet requested\"} />\n                    </Stack.Item>\n\n                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                        <TextField prefix=\"Cidr\" disabled={!net.vnetprivateend} label=\"Private Endpoint subnet\" onChange={(ev, val) => updateFn(\"privateLinkSubnetAddressPrefix\", val)} value={net.vnetprivateend ? net.privateLinkSubnetAddressPrefix : \"No Private Endpoints requested\"} />\n                    </Stack.Item>\n\n                </Stack>\n\n                <PodServiceNetwork net={net} updateFn={updateFn} />\n            </Stack>\n        </Stack>\n    )\n}","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport { TextField, Link, Separator, Dropdown, Slider, Stack, Text, Label, ChoiceGroup, Checkbox, MessageBar, MessageBarType } from '@fluentui/react';\nimport { adv_stackstyle, hasError, getError } from './common'\n\n\nexport default function ({ tabValues, updateFn, invalidArray }) {\n    const { addons, net } = tabValues\n    return (\n        <Stack tokens={{ childrenGap: 15 }} styles={adv_stackstyle}>\n\n            <Stack.Item align=\"start\">\n                <Label >Cluster Monitoring requirements</Label>\n                <MessageBar>Observing your clusters health is critical to smooth operations, select the managed Azure Monitor for Containers option, or the open source CNCF Prometheus/Grafana solution</MessageBar>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={addons.monitor}\n                    options={[\n                        { key: 'none', text: 'None' },\n                        { key: 'aci', text: 'Azure Monitor for Containers (logs and metrics)' },\n                        { key: 'oss', text: 'Prometheus / Grafana Helm Chart (metrics only)' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"monitor\", key)}\n                />\n            </Stack.Item>\n\n            { addons.monitor === \"aci\" &&\n                <Stack.Item align=\"center\" styles={{ root: { maxWidth: '700px'}}}>\n                    <Dropdown\n                        label=\"Log and Metrics Data Retention (Days)\"\n                        onChange={(ev, { key }) => updateFn(\"retentionInDays\", key)} selectedKey={addons.retentionInDays}\n                        options={[\n                            { key: 30, text: '30 Days' },\n                            { key: 60, text: '60 Days' },\n                            { key: 90, text: '90 Days' },\n                            { key: 120, text: '120 Days' },\n                            { key: 180, text: '180 Days' },\n                            { key: 270, text: '270 Days' },\n                            { key: 365, text: '365 Days' }\n                        ]}\n                    />\n\n                    <Checkbox styles={{ root: { marginTop: '10px'}}} checked={addons.createAksMetricAlerts} onChange={(ev, v) => updateFn(\"createAksMetricAlerts\", v)} label={<Text>Create recommended metric alerts, enable you to monitor your system resource when it's running on peak capacity or hitting failure rates (<Link target=\"_target\" href=\"https://azure.microsoft.com/en-us/updates/ci-recommended-alerts/\">docs</Link>) </Text>} />\n\n                </Stack.Item>\n            }\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item align=\"start\">\n\n                <Label >Azure Policy, to manage and report on the compliance state of your Kubernetes clusters</Label>\n                <MessageBar>Azure Policy extends Gatekeeper v3, an admission controller webhook for Open Policy Agent (OPA), to apply at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.\n                </MessageBar>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={addons.azurepolicy}\n                    options={[\n                        { key: 'none', text: 'No restrictions, users can deploy any kubernetes workloads' },\n                        { key: 'audit', text: 'AUDIT compliance with the set of cluster pod security baseline standards for Linux-based workloads' },\n                        { key: 'deny', text: 'BLOCK and non-compliant Linux-based workloads with the set of cluster pod security baseline standards' }\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"azurepolicy\", key)}\n                />\n                {addons.azurepolicy !== 'none' &&\n                    <MessageBar messageBarType={MessageBarType.success} styles={{ root: { marginTop: '20px', marginLeft: '100px', width: '700px' } }}>\n                        The template will automatically assign and <b>{addons.azurepolicy}</b> the following <Link target=\"_target\" href=\"https://github.com/Azure/azure-policy/blob/master/built-in-policies/policySetDefinitions/Kubernetes/Kubernetes_PSPBaselineStandard.json\">Policies</Link>:\n                        <ul>\n                            <li>Do not allow privileged containers in Kubernetes cluster</li>\n                            <li>Kubernetes cluster pods should only use approved host network and port range</li>\n                            <li>Kubernetes cluster containers should not share host process ID or host IPC namespace</li>\n                            <li>Kubernetes cluster containers should only use allowed capabilities</li>\n                            <li>Kubernetes cluster pod hostPath volumes should only use allowed host paths</li>\n                        </ul>\n                    </MessageBar>\n                }\n            </Stack.Item>\n            <Separator className=\"notopmargin\" />\n            <Stack.Item align=\"start\">\n                <Label >Cluster East-West traffic restrictions (Network Policies)</Label>\n                <MessageBar>Control which components can communicate with each other. The principle of least privilege should be applied to how traffic can flow between pods in an Azure Kubernetes Service (AKS) cluster</MessageBar>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={addons.networkPolicy}\n                    options={[\n                        { \"data-testid\":'addons-netpolicy-none', key: 'none', text: 'No restrictions, all PODs can access each other' },\n                        { \"data-testid\":'addons-netpolicy-calico', key: 'calico', text: 'Use Network Policy addon with Calico to implemented intra-cluster traffic restrictions (driven from \"NetworkPolicy\" objects)' },\n                        { \"data-testid\":'addons-netpolicy-azure', key: 'azure', text: 'Use Network Policy addon with Azure provider to implemented intra-cluster traffic restrictions (driven from \"NetworkPolicy\" objects)' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"networkPolicy\", key)}\n                />\n            </Stack.Item>\n\n            <Stack.Item align=\"center\" styles={{ root: { maxWidth: '700px', display: (addons.networkPolicy === \"none\" ? \"none\" : \"block\") } }} >\n                <Stack tokens={{ childrenGap: 15 }}>\n                    <MessageBar messageBarType={MessageBarType.warning}>A Default Deny Network Policy provides an enhanced security posture. Pods without policy are not allowed traffic. Please use caution, with apps that you know have policy defined.</MessageBar>\n                    <Checkbox inputProps={{ \"data-testid\": \"addons-netpolicy-denydefault-Checkbox\"}} disabled={addons.networkPolicy === 'none'} checked={addons.denydefaultNetworkPolicy} onChange={(ev, v) => updateFn(\"denydefaultNetworkPolicy\", v)} label=\"Create a default deny policy in the default namespace\" />\n                </Stack>\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n            <Stack.Item align=\"start\">\n                <Label required={true}>\n                    Securely Expose your applications via Layer 7 HTTP(S) proxies (Ingress Controller)\n                </Label>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={addons.ingress}\n                    options={[\n                        { key: 'none', text: 'No, I do not need a Layer7 proxy, or I will configure my own solution' },\n                        { key: 'appgw', text: 'Yes, I want a Azure Managed Application Gateway with WAF protection' },\n                        { key: 'contour', text: 'Yes, deploy contour in the cluster to expose my apps to the internet (https://projectcontour.io/)' },\n                        { key: 'nginx', text: 'Yes, deploy nginx in the cluster to expose my apps to the internet (nginx ingress controller)' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"ingress\", key)}\n                />\n                {hasError(invalidArray, 'ingress') &&\n                    <MessageBar styles={{ root: { marginTop: '20px', marginLeft: '100px', width: '700px' } }} messageBarType={MessageBarType.error}>{getError(invalidArray, 'ingress')}</MessageBar>\n                }\n            </Stack.Item>\n\n            <Stack.Item align=\"center\" styles={{ root: { maxWidth: '700px', display: (addons.ingress === \"none\" ? \"none\" : \"block\") } }} >\n                <Stack tokens={{ childrenGap: 15 }}>\n                    {addons.ingress === \"nginx\" && false &&\n                        <MessageBar messageBarType={MessageBarType.warning}>You requested a high security cluster & nginx public ingress. Please ensure you follow this information after deployment <Link target=\"_ar1\" href=\"https://docs.microsoft.com/en-us/azure/firewall/integrate-lb#public-load-balancer\">Asymmetric routing</Link></MessageBar>\n                    }\n                    {addons.ingress !== \"none\" && false &&\n                        <MessageBar messageBarType={MessageBarType.warning}>You requested a high security cluster. The DNS and Certificate options are disabled as they require additional egress application firewall rules for image download and webhook requirements. You can apply these rules and install the helm chart after provisioning</MessageBar>\n                    }\n\n                    {addons.ingress === \"nginx\" &&\n                        <Checkbox checked={addons.ingressEveryNode} onChange={(ev, v) => updateFn(\"ingressEveryNode\", v)} label={<Text>Run nginx on every node (deploy as Daemonset)</Text>} />\n                    }\n\n                    {addons.ingress === \"appgw\" && (\n\n                        net.vnet_opt === 'default' ?\n                            <MessageBar messageBarType={MessageBarType.warning}>Using default networking, so addon will provision default Application Gateway instance, for more options, select custom networking in the network tab</MessageBar>\n                            :\n                            <>\n                                <MessageBar messageBarType={MessageBarType.warning}>Custom or BYO networking is requested, so template will provision a new Application Gateway</MessageBar>\n\n                                <Checkbox inputProps={{ 'data-testid': \"addons-ingress-appgwKVIntegration-Checkbox\"}} checked={addons.appgwKVIntegration} onChange={(ev, v) => updateFn(\"appgwKVIntegration\", v)} label={<Text>Enable KeyVault Integration for TLS Certificates (<Link target=\"_ar1\" href=\"https://docs.microsoft.com/en-us/azure/application-gateway/key-vault-certs\">docs</Link>) </Text>} />\n                                {hasError(invalidArray, 'appgwKVIntegration') &&\n                                    <MessageBar styles={{ root: { marginTop: '0px !important' } }} messageBarType={MessageBarType.error}>{getError(invalidArray, 'appgwKVIntegration')}</MessageBar>\n                                }\n\n                                <Stack.Item>\n                                    <Label style={{ marginBottom: \"0px\" }}>Application Gateway Type (<Link target='_' href='https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview'>docs</Link>)</Label>\n                                    <ChoiceGroup\n                                        selectedKey={addons.appGWsku}\n                                        options={[\n                                            { key: 'Standard_v2', text: 'Standard_v2: Standard Application Gateway' },\n                                            { key: 'WAF_v2', text: 'WAF_v2: Web Application Firewall (WAF) on Application Gateway' }\n                                        ]}\n                                        onChange={(ev, { key }) => updateFn(\"appGWsku\", key)}\n                                    />\n                                </Stack.Item>\n\n                                { addons.appGWsku === 'WAF_v2' &&\n                                    <Stack.Item style={{ marginLeft: \"20px\"}}>\n                                        <Checkbox checked={addons.appGWenableFirewall} onChange={(ev, v) => updateFn(\"appGWenableFirewall\", v)} label={<Text>Enable Firewall: Provides centralized protection of your web applications from common exploits and vulnerabilities</Text>} />\n\n                                        { addons.appGWenableFirewall &&\n                                            <Stack.Item style={{ marginLeft: \"25px\"}}>\n                                                <Label style={{ marginBottom: \"0px\", marginTop: \"5px\" }}>WAF mode</Label>\n                                                <ChoiceGroup\n                                                    style={{marginBottom: \"0px\", marginTop: \"0px\" }}\n                                                    selectedKey={addons.appGwFirewallMode}\n                                                    options={[\n                                                        { key: 'Prevention', text: 'Prevention:   Blocks intrusions and attacks that the rules detect' },\n                                                        { key: 'Detection', text: 'Detection:   Monitors and logs all threat alerts.' }\n                                                    ]}\n                                                    onChange={(ev, { key }) => updateFn(\"appGwFirewallMode\", key)}\n                                                />\n                                            </Stack.Item>\n                                        }\n                                    </Stack.Item>\n                                }\n\n                                <Label style={{ marginBottom: \"0px\" }}>Capacity</Label>\n                                <Stack horizontal tokens={{ childrenGap: 150 }} styles={{ root: { marginTop: '0px !important' } }}>\n                                    <Stack.Item>\n                                        <ChoiceGroup selectedKey={addons.appGWautoscale} onChange={(ev, { key }) => updateFn(\"appGWautoscale\", key)}\n                                            options={[\n                                                {\n                                                    key: false,\n                                                    text: 'Manual'\n                                                }, {\n                                                    key: true,\n                                                    text: 'Autoscale'\n                                                }\n                                            ]} />\n                                    </Stack.Item>\n                                    <Stack.Item>\n                                        <Stack tokens={{ childrenGap: 0 }} styles={{ root: { width: 450 } }}>\n                                            <Slider label={`${addons.appGWautoscale ? \"Minimum instance count\" : \"Instance count\"}`} min={addons.appGWautoscale ? 0 : 1} max={125} step={1} defaultValue={addons.appGWcount} showValue={true}\n                                                onChange={(v) => updateFn(\"appGWcount\", v)} />\n                                            {addons.appGWautoscale && (\n                                                <Slider label=\"Maximum instance count\" min={2} max={125} step={1} defaultValue={addons.appGWmaxCount} showValue={true}\n                                                    onChange={(v) => updateFn(\"appGWmaxCount\", v)}\n                                                    snapToStep />\n                                            )}\n                                        </Stack>\n                                    </Stack.Item>\n                                </Stack>\n\n                                <Checkbox checked={addons.appgw_privateIp} onChange={(ev, v) => updateFn(\"appgw_privateIp\", v)} label={<Text>Use a Private Frontend IP for Ingress (<Link target=\"_ar1\" href=\"https://docs.microsoft.com/en-us/azure/application-gateway/ingress-controller-private-ip\">docs</Link>)</Text>} />\n                                {addons.appgw_privateIp &&\n                                    <TextField value={addons.appgw_privateIpAddress} onChange={(ev, v) => updateFn(\"appgw_privateIpAddress\", v)} errorMessage={getError(invalidArray, 'appgw_privateIpAddress')} required placeholder=\"Resource Id\" label={<Text style={{ fontWeight: 600 }}>Enter Private IP address from the AppGW CIDR subnet range (<b>{net.vnet_opt === 'custom' ? net.vnetAppGatewaySubnetAddressPrefix : 'examine BYO subnet range'}</b>)</Text>} />\n                                }\n                            </>)\n                    }\n\n                    {(addons.ingress === \"contour\" || addons.ingress === \"nginx\" || addons.ingress === \"appgw\") &&\n                        <>\n                            <Checkbox inputProps={{ \"data-testid\": \"addons-dns\"}} checked={addons.dns} onChange={(ev, v) => updateFn(\"dns\", v)} label={\n                                <Text>Create FQDN URLs for your applications using\n                                    <Link target=\"_t1\" href=\"https://github.com/kubernetes-sigs/external-dns\"> <b>external-dns</b> </Link>\n                                    (requires Azure <Link href=\"https://docs.microsoft.com/en-us/azure/dns/dns-getstarted-portal#create-a-dns-zone\" target=\"_t1\"> <b>Public</b> </Link> or <Link href=\"https://docs.microsoft.com/en-us/azure/dns/private-dns-getstarted-portal\" target=\"_t1\"> <b>Private</b> </Link> DNS Zone)\n                                </Text>} />\n                            {addons.dns &&\n                                <>\n                                    <MessageBar messageBarType={MessageBarType.warning}>If using a Public DNS Zone, you need to own a custom domain, you can easily purchase a custom domain through Azure <Link target=\"_t1\" href=\"https://docs.microsoft.com/en-us/azure/app-service/manage-custom-dns-buy-domain\"> <b>details here</b></Link></MessageBar>\n                                    <TextField value={addons.dnsZoneId} onChange={(ev, v) => updateFn(\"dnsZoneId\", v)} errorMessage={getError(invalidArray, 'dnsZoneId')} required placeholder=\"Resource Id\" label={<Text style={{ fontWeight: 600 }}>Enter your Public or Private Azure DNS Zone ResourceId <Link target=\"_t2\" href=\"https://ms.portal.azure.com/#blade/HubsExtension/BrowseResource/resourceType/Microsoft.Network%2FdnsZones\">find it here</Link></Text>} />\n\n\n                                    <Checkbox inputProps={{ \"data-testid\": \"addons-certMan\"}} disabled={hasError(invalidArray, 'dnsZoneId')} checked={addons.certMan} onChange={(ev, v) => updateFn(\"certMan\", v)} label=\"Automatically Issue Certificates for HTTPS using cert-manager (with Lets Encrypt - requires email\" />\n                                    {addons.certMan &&\n                                        <TextField value={addons.certEmail} onChange={(ev, v) => updateFn(\"certEmail\", v)} errorMessage={getError(invalidArray, 'certEmail') ? \"Enter valid email\" : ''} label=\"Enter mail address for certificate notification:\" required />\n                                    }\n                                </>\n                            }\n                        </>\n                    }\n                </Stack>\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item align=\"start\">\n                <Label required={true}>\n                    Do you require a secure private container registry to store my application images\n                </Label>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={addons.registry}\n                    options={[\n                        { key: 'none', text: 'No, my application images will be on DockerHub or another registry' },\n                        { key: 'Basic', text: 'Yes, setup Azure Container Registry \"Basic\" tier & authorise aks to pull images' },\n                        { key: 'Standard', text: 'Yes, setup Azure Container Registry \"Standard\" tier (minimum recommended for production)' },\n                        { key: 'Premium', text: 'Yes, setup Azure Container Registry \"Premium\" tier (required for Private Link)' }\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"registry\", key)}\n                />\n                {hasError(invalidArray, 'registry') &&\n                    <MessageBar styles={{ root: { marginLeft: '50px', width: '700px' } }} messageBarType={MessageBarType.error}>{getError(invalidArray, 'registry')}</MessageBar>\n                }\n\n            </Stack.Item>\n\n            <Stack.Item align=\"center\" styles={{ root: { width: '700px' }}}>\n                <Checkbox disabled={addons.registry === \"none\" || !net.vnetprivateend} checked={addons.acrPrivatePool} onChange={(ev, v) => updateFn(\"acrPrivatePool\", v)} label={<Text>Create ACR Private Agent Pool (private link only) (preview limited regions <a target=\"_new\" href=\"https://docs.microsoft.com/azure/container-registry/tasks-agent-pools\">docs</a>)</Text>} />\n                <Stack horizontal styles={{ root: { marginLeft: \"50px\" } }}>\n                    <TextField disabled={true} label=\"Agent Pool\" defaultValue=\"S1\"/>\n                    <TextField disabled={true} label=\"O/S\" defaultValue=\"Linux\"/>\n                    <TextField disabled={true} label=\"Agent Count\" defaultValue=\"1\"/>\n                </Stack>\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item align=\"start\">\n                <Label required={true}>\n                    CSI Secrets : Store Kubernetes Secrets in Azure KeyVault, using AKS Managed Identity (**Preview)\n                    (<a target=\"_new\" href=\"https://docs.microsoft.com/en-us/azure/aks/csi-secrets-store-driver\">docs</a>)\n                </Label>\n                <ChoiceGroup\n                    styles={{ root: { marginLeft: '50px' } }}\n                    selectedKey={addons.csisecret}\n                    options={[\n                        { key: 'none', text: 'No, I am happy to use the default Kubernetes secret storage, or I will configure my own solution' },\n                        { key: 'akvExist', text: 'Yes, store secrets in an existing KeyVault & enable Secrets Store CSI Driver' },\n                        { key: 'akvNew', text: 'Yes, provision a new Azure KeyVault & enable Secrets Store CSI Driver' }\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"csisecret\", key)}\n                />\n            </Stack.Item>\n\n            <Stack.Item align=\"center\" styles={{ root: { minWidth: '700px', display: (addons.csisecret === \"none\" ? \"none\" : \"block\") } }} >\n                <Stack tokens={{ childrenGap: 15 }}>\n                    {addons.csisecret === \"akvExist\" &&\n                        <TextField value={addons.kvId} onChange={(ev, v) => updateFn(\"kvId\", v)} errorMessage={getError(invalidArray, 'kvId')} required placeholder=\"Resource Id\" label={<Text style={{ fontWeight: 600 }}>Enter your Azure Key Vault Resource Id</Text>} />\n                    }\n                </Stack>\n            </Stack.Item>\n\n            {/*\n        <ChoiceGroup\n          label='Enable gitops'\n          selectedKey={addons.gitops}\n          options={[\n            { key: 'none', text: 'No, I will manage my kubernetes deployments manually' },\n            { key: 'yes', text: 'Yes, enable gitops' }\n          ]}\n          onChange={(ev, { key }) => updateFn(\"gitops\", key)}\n        />\n        */}\n        </Stack >\n    )\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport { mergeStyles, TextField, Link, Separator, DropdownMenuItemType, Dropdown, Slider, Stack, Text, Label, ChoiceGroup, Checkbox, MessageBar, MessageBarType } from '@fluentui/react';\nimport { adv_stackstyle, getError, hasError } from './common'\n\nconst optionRootClass = mergeStyles({\n    display: 'flex',\n    alignItems: 'baseline'\n});\n\nexport const VMs = [\n    { key: 'b', text: 'Burstable (dev/test)', itemType: DropdownMenuItemType.Header },\n    { key: 'Standard_B2s', text: '2 vCPU,  4 GiB RAM,   8GiB SSD, 40%\t-> 200% CPU', eph: true },\n    { key: 'dv2', text: 'General purpose V2', itemType: DropdownMenuItemType.Header },\n    { key: 'default', text: '2 vCPU,  7 GiB RAM,  14GiB SSD,  86 GiB cache (8000 IOPS)', eph: false },\n    { key: 'Standard_DS3_v2', text: '4 vCPU, 14 GiB RAM,  28GiB SSD, 172 GiB cache (16000 IOPS)', eph: true },\n    { key: 'dv4', text: 'General purpose V4', itemType: DropdownMenuItemType.Header },\n    { key: 'Standard_D2ds_v4', text: '2 vCPU,  8 GiB RAM,  75GiB SSD,               (19000 IOPS)', eph: false },\n    { key: 'Standard_D4ds_v4', text: '4 vCPU, 16 GiB RAM, 150GiB SSD, 100 GiB cache (38500 IOPS)', eph: false },\n    { key: 'Standard_D8ds_v4', text: '8 vCPU, 32 GiB RAM, 300GiB SSD,               (77000 IOPS)', eph: true },\n    { key: 'fv2', text: 'Compute optimized', itemType: DropdownMenuItemType.Header },\n    { key: 'Standard_F2s_v2', text: '2 vCPU,  4 GiB RAM,  16GiB SSD,               (3200 IOPS)', eph: false }\n]\n\nexport default function ({ tabValues, updateFn, featureFlag, invalidArray }) {\n    const { cluster } = tabValues\n    const defenderFeatureFlag = featureFlag.includes('defender')\n    return (\n        <Stack tokens={{ childrenGap: 15 }} styles={adv_stackstyle}>\n\n            <Label style={{ marginBottom: \"10px\" }}>Cluster Performance & Scale Requirements</Label>\n            <Stack vertical tokens={{ childrenGap: 15 }} style={{ marginTop: 0, marginLeft: '50px' }} >\n\n                <Stack horizontal tokens={{ childrenGap: 55 }}>\n                    <Stack.Item>\n                        <Label >Uptime SLA <Link target='_' href='https://docs.microsoft.com/azure/aks/uptime-sla'>docs</Link></Label>\n                        <ChoiceGroup\n                            selectedKey={cluster.AksPaidSkuForSLA}\n                            options={[\n                                { key: false, text: 'Free clusters with a service level objective (SLO) of 99.5%' },\n                                { key: true, text: 'Uptime SLA guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones' }\n                            ]}\n                            onChange={(ev, { key }) => updateFn(\"AksPaidSkuForSLA\", key)}\n                        />\n                    </Stack.Item>\n                </Stack>\n\n                <Stack horizontal tokens={{ childrenGap: 55 }}>\n                    <Stack.Item>\n                        <Label >System Pool Type <Link target='_' href='https://docs.microsoft.com/azure/aks/use-system-pools#system-and-user-node-pools'>docs</Link></Label>\n                        <ChoiceGroup\n\n                            selectedKey={cluster.SystemPoolType}\n                            options={[\n                                { \"data-testid\":'cluster-systempool-none', key: 'none', text: 'No separate system pool: Use a single pool for System and User workloads' },\n                                { \"data-testid\":'cluster-systempool-Cost-Optimised', key: 'Cost-Optimised', text: 'Cost-Optimised: use low-cost Burstable VMs, with 1-3 node autoscale' },\n                                { \"data-testid\":'cluster-systempool-Standard', key: 'Standard', text: 'Standard: use standard 4-core VMs, with 2-3 node autoscale' }\n                            ]}\n                            onChange={(ev, { key }) => updateFn(\"SystemPoolType\", key)}\n                        />\n                    </Stack.Item>\n                </Stack>\n\n                <Stack horizontal tokens={{ childrenGap: 150 }}>\n                    <Stack.Item>\n                        <Label >Scale Type</Label>\n                        <ChoiceGroup selectedKey={cluster.autoscale} onChange={(ev, { key }) => updateFn(\"autoscale\", key)}\n                            options={[\n                                {\n                                    key: false,\n                                    iconProps: { iconName: 'FollowUser' },\n                                    text: 'Manual scale'\n                                }, {\n                                    key: true,\n                                    iconProps: { iconName: 'ScaleVolume' },\n                                    text: 'Autoscale'\n                                }\n                            ]} />\n                    </Stack.Item>\n                    <Stack.Item>\n                        <Label >Scale Values</Label>\n                        <Stack tokens={{ childrenGap: 0 }} styles={{ root: { width: 450 } }}>\n                            <Slider label={`Initial ${cluster.autoscale ? \"(& Autoscaler Min nodes)\" : \"nodes\"}`} min={1} max={10} step={1} defaultValue={cluster.agentCount} showValue={true}\n                                onChange={(v) => updateFn(\"agentCount\", v)} />\n                            {cluster.autoscale && (\n                                <Slider label=\"Autoscaler Max nodes\" min={5} max={100} step={5} defaultValue={cluster.maxCount} showValue={true}\n                                    onChange={(v) => updateFn(\"maxCount\", v)}\n                                    snapToStep />\n                            )}\n                        </Stack>\n                    </Stack.Item>\n                </Stack>\n\n                <Stack horizontal tokens={{ childrenGap: 55 }}>\n                    <Stack.Item>\n                        <Label >Compute Type</Label>\n                        <ChoiceGroup\n\n                            selectedKey=\"gp\"\n                            options={[\n                                {\n                                    key: 'gp',\n                                    iconProps: { iconName: 'Processing' },\n                                    text: 'General Purpose'\n                                },\n                                {\n                                    key: 'iops',\n                                    iconProps: { iconName: 'OfflineStorageSolid' },\n                                    text: 'IO Optimised',\n                                    disabled: true\n                                },\n                                {\n                                    key: 'gpu',\n                                    iconProps: { iconName: 'Game' },\n                                    text: 'GPU Workloads',\n                                    disabled: true\n                                }\n                            ]} />\n                    </Stack.Item>\n\n                    <Stack.Item>\n                        <Label >Node Size</Label>\n                        <Stack tokens={{ childrenGap: 10 }} styles={{ root: { width: 450 } }}>\n                            <Dropdown\n\n                                selectedKey={cluster.vmSize}\n                                onChange={(ev, { key }) => updateFn(\"vmSize\", key)}\n                                placeholder=\"Select VM Size\"\n                                options={VMs}\n                                styles={{ dropdown: { width: \"100%\" } }}\n                            />\n\n                            {hasError(invalidArray, 'osDiskType') &&\n                                <MessageBar messageBarType={MessageBarType.error}>{getError(invalidArray, 'osDiskType')}</MessageBar>\n                            }\n                            <ChoiceGroup\n                                onChange={(ev, { key }) => updateFn(\"osDiskType\", key)}\n                                selectedKey={cluster.osDiskType}\n                                options={[\n                                    {\n                                        key: 'Ephemeral',\n                                        text: 'Ephemeral (Requires Node with >137GiB of cache)'\n                                    },\n                                    {\n                                        key: 'Managed',\n                                        text: 'Persistent in Storage Account',\n                                    }\n                                ]} />\n\n                            {cluster.osDiskType === 'Managed' &&\n                                <Dropdown\n                                    label=\"OS disk size\"\n                                    selectedKey={cluster.osDiskSizeGB}\n                                    onChange={(ev, { key }) => updateFn(\"osDiskSizeGB\", key)}\n                                    placeholder=\"Select OS Disk\"\n                                    options={[\n                                        { key: 'df', text: 'Use the default for the VM size', itemType: DropdownMenuItemType.Header },\n                                        { key: 0, text: 'default' },\n                                        { key: 'pd', text: 'Premium SSD Managed Disks', itemType: DropdownMenuItemType.Header },\n                                        { key: 32, text: '32 GiB (120 IOPS)' },\n                                        { key: 64, text: '64 GiB (240 IOPS)' },\n                                        { key: 128, text: '128 GiB (500 IOPS)' },\n                                    ]}\n                                    styles={{ dropdown: { width: \"100%\" } }}\n                                />\n                            }\n\n                        </Stack>\n                    </Stack.Item>\n                </Stack>\n            </Stack>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item align=\"start\">\n                <Label required={true}>Zone Support - AKS clusters deployed with multiple availability zones configured across a cluster provide a higher level of availability to protect against a hardware failure or a planned maintenance event. See <Link target='_' href='https://docs.microsoft.com/azure/aks/availability-zones#limitations-and-region-availability'>limits</Link> before selecting\n                </Label>\n                <ChoiceGroup\n                    selectedKey={cluster.availabilityZones}\n                    styles={{ root: { marginLeft: '50px' } }}\n                    options={[\n                        { key: 'no', text: 'Deploy into single zone' },\n                        { key: 'yes', text: 'Deploy my control plane and nodes across zones 1,2,3' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"availabilityZones\", key)}\n                // styles={{ label: {fontWeight: \"regular\"}}}\n                />\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item align=\"start\">\n                <Label required={true}>\n                    Cluster Auto-upgrade <Link target=\"_\" href=\"https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel\">docs</Link>\n                </Label>\n                <ChoiceGroup\n                    selectedKey={cluster.upgradeChannel}\n                    styles={{ root: { marginLeft: '50px' } }}\n                    options={[\n                        { key: 'none', text: 'Disables auto-upgrades' },\n                        { key: 'patch', text: 'Patch: auto-upgrade cluster to the latest supported patch version when it becomes available while keeping the minor version the same.' },\n                        { key: 'stable', text: 'Stable: auto-upgrade cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version' },\n                        { key: 'rapid', text: 'Rapid: auto-upgrade cluster to the latest supported patch release on the latest supported minor version.' },\n                        { key: 'node-image', text: 'Node-Image: auto-upgrade cluster node images to the latest version available.' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"upgradeChannel\", key)}\n                />\n            </Stack.Item>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack horizontal tokens={{ childrenGap: 142 }} styles={{ root: { marginTop: 10 } }}>\n                <Stack.Item>\n                    <ChoiceGroup\n                        id='cluster-userauth-ChoiceGroup'\n                        styles={{ root: { marginLeft: '50px' } }}\n                        label={<Label>Cluster User Authentication <Link target=\"_\" href=\"https://docs.microsoft.com/azure/aks/managed-aad\">docs</Link></Label>}\n                        selectedKey={cluster.enable_aad}\n                        onChange={(ev, { key }) => updateFn(\"enable_aad\", key)}\n                        options={[\n                            {\n                                key: false,\n                                iconProps: { iconName: 'UserWarning' },\n                                text: 'Kubernetes',\n                                id: 'cluster-userauth-k8s'\n                            },\n                            {\n                                key: true,\n                                iconProps: { iconName: 'AADLogo' },\n                                text: 'AAD Integrate',\n                                id: 'cluster-userauth-aad'\n                            }\n                        ]} />\n                </Stack.Item>\n\n                <Stack.Item>\n                    {cluster.enable_aad &&\n\n                        <Stack tokens={{ childrenGap: 10 }} styles={{ root: { width: 450, marginTop: \"30px\" } }}>\n\n                            <ChoiceGroup\n                                styles={{ root: { width: 300 } }}\n                                selectedKey={cluster.use_alt_aad}\n                                options={[\n                                    {\n                                        key: false,\n                                        text: 'Use the AKS subscription tenant',\n                                    },\n                                    {\n                                        key: true,\n                                        text: 'Use alt. tenant',\n                                        onRenderField: (props, render) => {\n\n                                            return (\n                                                <div className={optionRootClass}>\n                                                    {render(props)}\n                                                    <TextField\n                                                        value={cluster.aad_tenant_id}\n                                                        onChange={(ev, val) => updateFn(\"aad_tenant_id\", val)}\n                                                        errorMessage={getError(invalidArray, 'aad_tenant_id')}\n                                                        styles={{ root: { marginLeft: 5 } }}\n                                                        disabled={props ? !cluster.use_alt_aad : false}\n                                                        required placeholder=\"tenant id\" />\n\n\n                                                </div>\n                                            );\n                                        }\n                                    }\n                                ]}\n                                onChange={(ev, { key }) => updateFn('use_alt_aad', key)}\n\n                            />\n\n                            <Checkbox checked={cluster.enableAzureRBAC} onChange={(ev, val) => updateFn(\"enableAzureRBAC\", val)} onRenderLabel={() => <Text styles={{ root: { color: 'black' } }}>Azure RBAC for Kubernetes Authorization <Link target='_' href='https://docs.microsoft.com/azure/aks/manage-azure-rbac'>docs</Link>**</Text>} />\n\n                            {!cluster.enableAzureRBAC &&\n                                <>\n                                    <TextField label=\"AAD Group objectIDs that will have admin role of the cluster ',' separated\" onChange={(ev, val) => updateFn(\"aadgroupids\", val)} value={cluster.aadgroupids} />\n                                    {cluster.enable_aad && !cluster.aadgroupids &&\n                                        <MessageBar messageBarType={MessageBarType.warning}>You will be forbidden to do any kubernetes options unless you add a AAD Groups here, or follow <Link target='_' href='https://docs.microsoft.com/azure/aks/azure-ad-rbac#create-the-aks-cluster-resources-for-app-devs'>this</Link> after the cluster is created</MessageBar>\n                                    }\n                                </>\n                            }\n\n                            <Checkbox inputProps={{ \"data-testid\": \"cluster-localaccounts-Checkbox\"}} disabled={!cluster.enableAzureRBAC} checked={cluster.AksDisableLocalAccounts} onChange={(ev, val) => updateFn(\"AksDisableLocalAccounts\", val)} onRenderLabel={() => <Text styles={{ root: { color: 'black' } }}>Disable Local Kubernetes Accounts <Link target='_' href='https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts'>docs</Link>**</Text>} />\n\n                        </Stack>\n                    }\n                </Stack.Item>\n            </Stack>\n\n            <Separator className=\"notopmargin\" />\n\n            <Stack.Item align=\"start\">\n                <Label required={true}>\n                    Cluster API Server Security\n                </Label>\n                <ChoiceGroup\n                    selectedKey={cluster.apisecurity}\n                    styles={{ root: { marginLeft: '50px' } }}\n                    options={[\n                        { key: 'none', text: 'Public IP with no IP restrictions' },\n                        { key: 'whitelist', text: 'Create allowed IP ranges (defaults to IP address of machine running the script)' },\n                        { key: 'private', text: 'Private Cluster (WARNING: most complex to operate)' }\n\n                    ]}\n                    onChange={(ev, { key }) => updateFn(\"apisecurity\", key)}\n                />\n            </Stack.Item>\n\n            <Stack.Item align=\"center\" styles={{ root: { maxWidth: '700px', display: (cluster.apisecurity === \"private\" ? \"block\" : \"none\") } }} >\n                <Label style={{ marginBottom: \"0px\" }}>Private dns zone mode for private cluster.</Label>\n                <Stack tokens={{ childrenGap: 15 }}>\n                    {cluster.apisecurity === \"private\" &&\n                        <ChoiceGroup selectedKey={cluster.privateDNSZone} onChange={(ev, { key }) => updateFn(\"privateDNSZone\", key)}\n                            options={[\n                                {\n                                    key: 'none',\n                                    text: 'None: Defaults to public DNS (AKS will not create a Private DNS Zone)'\n                                }, {\n                                    key: 'system',\n                                    disabled: true,\n                                    text: 'System: AKS will create a Private DNS Zone in the Node Resource Group'\n                                }, {\n                                    key: 'custom',\n                                    disabled: true,\n                                    text: 'Custom: BYO Private DNS Zone (provide ResourceId)'\n                                }\n                            ]} />\n                    }\n                </Stack>\n            </Stack.Item>\n\n            { defenderFeatureFlag &&\n            <>\n                <Separator className=\"notopmargin\" />\n\n                <Stack.Item align=\"start\">\n                    <Label required={true}>\n                        Microsoft Defender for Containers  <Link target='_' href='https://docs.microsoft.com/azure/defender-for-cloud/defender-for-cloud-introduction'>docs</Link>\n                    </Label>\n                    <ChoiceGroup\n                        selectedKey={cluster.DefenderForContainers}\n                        styles={{ root: { marginLeft: '50px' } }}\n                        options={[\n                            { key: false, text: 'Disable Microsoft Defender security alerting' },\n                            { key: true, text: 'Enable Microsoft Defender security alerting' }\n\n                        ]}\n                        onChange={(ev, { key }) => updateFn(\"DefenderForContainers\", key)}\n                    />\n                </Stack.Item>\n            </>}\n        </Stack>\n    )\n}","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport {  Checkbox, Pivot, PivotItem, Image, TextField, Link, Separator, DropdownMenuItemType, Dropdown, Stack, Text, Toggle, Label, MessageBar, MessageBarType } from '@fluentui/react';\n\nimport { CodeBlock, adv_stackstyle, getError } from './common'\n\nexport default function DeployTab({ defaults, updateFn, tabValues, invalidArray, invalidTabs, urlParams }) {\n\n  const { net, addons, cluster, deploy } = tabValues\n  const allok = !(invalidTabs && invalidTabs.length > 0)\n  const apiips_array = deploy.apiips.split(',').filter(x => x.trim())\n  const aksvnetparams = {\n    ...(net.vnetAddressPrefix !== defaults.net.vnetAddressPrefix && { vnetAddressPrefix: net.vnetAddressPrefix }),\n    ...(net.vnetAksSubnetAddressPrefix !== defaults.net.vnetAksSubnetAddressPrefix && { vnetAksSubnetAddressPrefix: net.vnetAksSubnetAddressPrefix })\n  }\n  const serviceparams = {\n    ...(net.serviceCidr !== defaults.net.serviceCidr && { serviceCidr: net.serviceCidr }),\n    ...(net.dnsServiceIP !== defaults.net.dnsServiceIP && { dnsServiceIP: net.dnsServiceIP })\n  }\n  const params = {\n    resourceName: deploy.clusterName,\n    ...(deploy.kubernetesVersion !== defaults.deploy.kubernetesVersion && {kubernetesVersion: deploy.kubernetesVersion}),\n    ...(cluster.agentCount !== defaults.cluster.agentCount && { agentCount: cluster.agentCount}),\n    ...(cluster.upgradeChannel !== defaults.cluster.upgradeChannel && { upgradeChannel: cluster.upgradeChannel }),\n    ...(cluster.AksPaidSkuForSLA !== defaults.cluster.AksPaidSkuForSLA && { AksPaidSkuForSLA: cluster.AksPaidSkuForSLA }),\n    ...(cluster.SystemPoolType === 'none' ? { JustUseSystemPool: true } : cluster.SystemPoolType !== defaults.cluster.SystemPoolType && { SystemPoolType: cluster.SystemPoolType }),\n    ...(cluster.vmSize !== defaults.cluster.vmSize && { agentVMSize: cluster.vmSize }),\n    ...(cluster.autoscale && { agentCountMax: cluster.maxCount }),\n    ...(cluster.osDiskType === \"Managed\" && { osDiskType: cluster.osDiskType, ...(cluster.osDiskSizeGB > 0 && { osDiskSizeGB: cluster.osDiskSizeGB }) }),\n    ...(net.vnet_opt === \"custom\" && {\n         custom_vnet: true,\n         ...serviceparams,\n         ...aksvnetparams,\n         ...(net.bastion !== defaults.net.bastion && {bastion: net.bastion}),\n         ...(net.bastion && defaults.net.bastionSubnetAddressPrefix !== net.bastionSubnetAddressPrefix && {bastionSubnetAddressPrefix: net.bastionSubnetAddressPrefix})\n       }),\n    ...(net.vnet_opt === \"byo\" && { byoAKSSubnetId: net.byoAKSSubnetId, ...serviceparams }),\n    ...(net.vnet_opt === \"byo\" && addons.ingress === 'appgw' && { byoAGWSubnetId: net.byoAGWSubnetId }),\n    ...(cluster.enable_aad && { enable_aad: true, ...(cluster.enableAzureRBAC === false && cluster.aad_tenant_id && { aad_tenant_id: cluster.aad_tenant_id }) }),\n    ...(cluster.enable_aad && cluster.AksDisableLocalAccounts !== defaults.cluster.AksDisableLocalAccounts && { AksDisableLocalAccounts: cluster.AksDisableLocalAccounts }),\n    ...(cluster.enable_aad && cluster.enableAzureRBAC && { enableAzureRBAC: true, ...(deploy.clusterAdminRole && { adminprincipleid: \"$(az ad signed-in-user show --query objectId --out tsv)\" }) }),\n    ...(addons.registry !== \"none\" && {\n        registries_sku: addons.registry,\n        ...(deploy.acrPushRole && { acrPushRolePrincipalId: \"$(az ad signed-in-user show --query objectId --out tsv)\"}) }),\n    ...(net.afw && { azureFirewalls: true, ...(addons.certMan && {certManagerFW: true}), ...(net.vnet_opt === \"custom\" && defaults.net.vnetFirewallSubnetAddressPrefix !== net.vnetFirewallSubnetAddressPrefix && { vnetFirewallSubnetAddressPrefix: net.vnetFirewallSubnetAddressPrefix }) }),\n    ...(net.vnet_opt === \"custom\" && net.vnetprivateend && {\n        privateLinks: true,\n        ...(addons.csisecret === 'akvNew' && deploy.kvIPAllowlist  && apiips_array.length > 0 && {kvIPAllowlist: apiips_array }),\n        ...(defaults.net.privateLinkSubnetAddressPrefix !== net.privateLinkSubnetAddressPrefix && {privateLinkSubnetAddressPrefix: net.privateLinkSubnetAddressPrefix}),\n    }),\n    ...(addons.monitor === \"aci\" && { omsagent: true, retentionInDays: addons.retentionInDays, ...( addons.createAksMetricAlerts !== defaults.addons.createAksMetricAlerts && {createAksMetricAlerts: addons.createAksMetricAlerts }) }),\n    ...(addons.networkPolicy !== \"none\" && { networkPolicy: addons.networkPolicy }),\n    ...(addons.azurepolicy !== \"none\" && { azurepolicy: addons.azurepolicy }),\n    ...(net.networkPlugin !== defaults.net.networkPlugin && {networkPlugin: net.networkPlugin}),\n    ...(net.vnet_opt === \"custom\" && net.networkPlugin === 'kubenet' && defaults.net.podCidr !== net.podCidr && { podCidr: net.podCidr }),\n    ...(cluster.availabilityZones === \"yes\" && { availabilityZones: ['1', '2', '3'] }),\n    ...(cluster.apisecurity === \"whitelist\" && deploy.clusterIPWhitelist && apiips_array.length > 0 && { authorizedIPRanges: apiips_array }),\n    ...(cluster.apisecurity === \"private\" && { enablePrivateCluster: true }),\n    ...(addons.ingress !== \"none\" && addons.dns && addons.dnsZoneId && { dnsZoneId: addons.dnsZoneId }),\n    ...(addons.ingress === \"appgw\" && {\n      ingressApplicationGateway: true, ...(net.vnet_opt === 'custom' && defaults.net.vnetAppGatewaySubnetAddressPrefix !== net.vnetAppGatewaySubnetAddressPrefix && { vnetAppGatewaySubnetAddressPrefix: net.vnetAppGatewaySubnetAddressPrefix }), ...(net.vnet_opt !== 'default' && {\n        appGWcount: addons.appGWcount,\n        appGWsku: addons.appGWsku,\n        ...(addons.appGWsku === 'WAF_v2' && addons.appGWenableFirewall !== defaults.addons.appGWenableFirewall && { appGWenableFirewall: addons.appGWenableFirewall }),\n        ...(addons.appGWsku === 'WAF_v2' && addons.appGWenableFirewall && addons.appGwFirewallMode !== defaults.addons.appGwFirewallMode && { appGwFirewallMode: addons.appGwFirewallMode }),\n        ...(addons.appGWautoscale && { appGWmaxCount: addons.appGWmaxCount }),\n        ...(addons.appgw_privateIp && { privateIpApplicationGateway: addons.appgw_privateIpAddress }),\n        ...(addons.appgwKVIntegration && addons.csisecret === 'akvNew' && { appgwKVIntegration: true })\n      })\n    }),\n    ...(addons.csisecret !== \"none\" && { azureKeyvaultSecretsProvider: true }),\n    ...(addons.csisecret === 'akvNew' && { createKV: true, ...(deploy.kvCertSecretRole && { kvOfficerRolePrincipalId: \"$(az ad signed-in-user show --query objectId --out tsv)\"}) })\n  }\n\n  const preview_params = {\n    ...(addons.gitops !== \"none\" && { gitops: addons.gitops }),\n    ...(net.vnet_opt === \"custom\" && net.vnetprivateend && {\n      ...(addons.registry !== \"none\" && {\n        ...(addons.acrPrivatePool !== defaults.addons.acrPrivatePool && {acrPrivatePool: addons.acrPrivatePool}),\n        ...(addons.acrPrivatePool && defaults.net.acrAgentPoolSubnetAddressPrefix !== net.acrAgentPoolSubnetAddressPrefix && {acrAgentPoolSubnetAddressPrefix: net.acrAgentPoolSubnetAddressPrefix})\n      })\n    }),\n    ...(urlParams.getAll('feature').includes('defender') && cluster.DefenderForContainers !== defaults.cluster.DefenderForContainers && { DefenderForContainers: cluster.DefenderForContainers })\n  }\n\n  const params2CLI = p => Object.keys(p).map(k => {\n    const val = p[k]\n    const targetVal = Array.isArray(val) ? JSON.stringify(JSON.stringify(val)) : val\n    return ` \\\\\\n\\t${k}=${targetVal}`\n  }).join('')\n\n  const params2file = p => Object.keys(p).filter(p => p !== 'adminprincipleid' && p !== 'acrPushRolePrincipalId' && p !== 'kvOfficerRolePrincipalId').reduce((a, c) => { return { ...a, parameters: { ...a.parameters, [c]: { value: p[c] } } } }, {\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {}\n  })\n\n  const finalParams = { ...params, ...(!deploy.disablePreviews && preview_params) }\n  const aks = `aks-${deploy.clusterName}`\n  const agw = `agw-${deploy.clusterName}`\n  const deploycmd =\n    `# Create Resource Group \\n` +\n    `az group create -l ${deploy.location} -n ${deploy.rg} \\n\\n` +\n    `# Deploy template with in-line parameters \\n` +\n    `az deployment group create -g ${deploy.rg}  ${process.env.REACT_APP_AZ_TEMPLATE_ARG} --parameters` + params2CLI(finalParams)\n  const param_file = JSON.stringify(params2file(finalParams), null, 2).replaceAll('\\\\\\\\\\\\', '').replaceAll('\\\\\\\\\\\\', '')\n\n  const prometheus_namespace = 'monitoring'\n  const prometheus_helm_release_name = 'monitoring'\n  const nginx_namespace = 'ingress-basic'\n  const nginx_helm_release_name = 'nginx-ingress'\n\n  const EXTERNAL_DNS_REGISTRY = 'k8s.gcr.io'\n  const EXTERNAL_DNS_REPO = 'external-dns/external-dns:v0.8.0'\n\n  const postscript =\n    // App Gateway addon: see main.bicep DEPLOY_APPGW_ADDON\n    (net.vnet_opt === \"byo\" && addons.ingress === 'appgw' ? `\n# ---------------------------------------------------------------------\n# Workaround to enable AGIC with BYO VNET (until supported by template)\nAPPGW_RG_ID=\"$(az group show -n ${deploy.rg} --query id -o tsv)\"\nAPPGW_ID=\"$(az network application-gateway show -g ${deploy.rg} -n ${agw} --query id -o tsv)\"\naz aks enable-addons -n ${aks} -g ${deploy.rg} -a ingress-appgw --appgw-id $APPGW_ID\nAKS_AGIC_IDENTITY_ID=\"$(az aks show -g ${deploy.rg} -n ${aks} --query addonProfiles.ingressApplicationGateway.identity.objectId -o tsv)\"\naz role assignment create --role \"Contributor\" --assignee-principal-type ServicePrincipal --assignee-object-id $AKS_AGIC_IDENTITY_ID --scope $APPGW_ID\naz role assignment create --role \"Reader\" --assignee-principal-type ServicePrincipal --assignee-object-id $AKS_AGIC_IDENTITY_ID --scope $APPGW_RG_ID\n` : '') +\n    (net.vnet_opt === \"byo\" && addons.ingress === 'appgw' /* && appgwKVIntegration */ ? `\nAPPGW_IDENTITY=\"$(az network application-gateway show -g ${deploy.rg} -n ${agw} --query 'keys(identity.userAssignedIdentities)[0]' -o tsv)\"\naz role assignment create --role \"Managed Identity Operator\" --assignee-principal-type ServicePrincipal --assignee-object-id $AKS_AGIC_IDENTITY_ID --scope $APPGW_IDENTITY\n` : '') +\n\n\n    // Get credentials\n    (cluster.apisecurity !== \"private\" ? `\n# ----------------------------------------\n# Get credentials for your new AKS cluster\naz aks get-credentials -g ${deploy.rg} -n ${aks}\n` : '') +\n\n\n    // Prometheus\n    (addons.monitor === 'oss' ? `\n# -----------------------------------\n# Install kube-prometheus-stack chart\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\nkubectl create namespace ${prometheus_namespace}\nhelm install ${prometheus_helm_release_name} prometheus-community/kube-prometheus-stack --namespace ${prometheus_namespace}\n${cluster.apisecurity === \"private\" ? `\"` : ``}\n` : '') +\n    // Default Deny All Network Policy, east-west traffic in cluster\n    (addons.networkPolicy !== 'none' && addons.denydefaultNetworkPolicy ? `\n# -----------------------------------\n# Create a default-deny network policy in your cluster to deny all traffic in the default namespace\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nkubectl apply -f https://raw.githubusercontent.com/Azure/AKS-Construction/0.4.3/postdeploy/k8smanifests/networkpolicy-deny-all.yml\n${cluster.apisecurity === \"private\" ? `\"` : ``}\n` : '') +\n\n    // Nginx Ingress Controller\n    (addons.ingress === 'nginx' ? `\n# --------------------------------\n# Install Nginx Ingress Controller\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nkubectl create namespace ${nginx_namespace}\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm install ${nginx_helm_release_name} ingress-nginx/ingress-nginx \\\\\n  --set controller.publishService.enabled=true \\\\\n` + (addons.ingressEveryNode ?\n        `  --set controller.kind=DaemonSet \\\\\n  --set controller.service.externalTrafficPolicy=Local \\\\\n` : '') +\n      (addons.monitor === 'oss' ?\n        `  --set controller.metrics.enabled=true \\\\\n  --set controller.metrics.serviceMonitor.enabled=true \\\\\n  --set controller.metrics.serviceMonitor.namespace=${prometheus_namespace} \\\\\n  --set controller.metrics.serviceMonitor.additionalLabels.release=${prometheus_helm_release_name} \\\\\n` : '') +\n      `  --namespace ${nginx_namespace}\n${cluster.apisecurity === \"private\" ? `\"` : ``}\n` : '') +\n\n    // Contour Ingress Controller\n    (addons.ingress === 'contour' ? `\n# ----------------------------------\n# Install Contour Ingress Controller\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nkubectl apply -f https://projectcontour.io/quickstart/contour.yaml\n${cluster.apisecurity === \"private\" ? `\"` : ``}\n` : '') +\n\n\n    // External DNS\n    // external-dns needs permissions to make changes in the Azure DNS server.\n    // https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/azure.md#azure-managed-service-identity-msi\n    (addons.ingress !== \"none\" && addons.dns &&  addons.dnsZoneId ? `\n# --------------------\n# Install external-dns\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nkubectl create secret generic azure-config-file --from-file=azure.json=/dev/stdin<<EOF\n{\n  userAssignedIdentityID: $(az aks show -g ${deploy.rg} -n ${aks} --query identityProfile.kubeletidentity.clientId -o tsv),\n  tenantId: $(az account show --query tenantId -o tsv),\n  useManagedIdentityExtension: true,\n  subscriptionId: ${addons.dnsZoneId.split('/')[2]},\n  resourceGroup: ${addons.dnsZoneId.split('/')[4]}\n}\nEOF\n${cluster.apisecurity === \"private\" ? `\"\n# Import Image to ACR\nexport ACRNAME=$(az acr list -g ${deploy.rg} --query [0].name -o tsv)\naz acr import -n $ACRNAME --source ${EXTERNAL_DNS_REGISTRY}/${EXTERNAL_DNS_REPO} --image ${EXTERNAL_DNS_REPO}\n` : ``}\n\n# external-dns manifest (for clusters with RBAC)\ncurl https://raw.githubusercontent.com/Azure/AKS-Construction/main/helper/config/external-dns.yml | sed -e \"s|{{image}}|${cluster.apisecurity === \"private\" ? `$ACRNAME.azurecr.io/${EXTERNAL_DNS_REPO}` : `${EXTERNAL_DNS_REGISTRY}/${EXTERNAL_DNS_REPO}`}|g\" -e \"s|{{domain-filter}}|${addons.dnsZoneId.split('/')[8]}|g\" -e \"s|{{provider}}|${addons.dnsZoneId.split('/')[7] === 'privateDnsZones' ? 'azure-private-dns' : 'azure'}|g\"  >/tmp/aks-ext-dns.yml\n${cluster.apisecurity === \"private\" ?\n  `az aks command invoke -g ${deploy.rg} -n ${aks} --command \"kubectl apply -f ./aks-ext-dns.yml\" --file  /tmp/aks-ext-dns.yml`\n:\n  `kubectl apply -f /tmp/aks-ext-dns.yml`}\n\n` : '') +\n\n\n    // Cert-Manager\n    // https://cert-manager.io/docs/installation/\n    // Cannot use 1.6.0 with AGIC https://github.com/jetstack/cert-manager/issues/4547\n    // cert-manager ACME ClusterIssuer Configuration (client owns the domain)\n    // Lets Encrypt production Issuer, using either HTTP01 for external services, or DNS01 for internal\n    // https://cert-manager.io/docs/configuration/acme/\n\n    /*\n    - dns01:\n        # Add azureDNS resolver for Private endpoints, but this need to be fixed: https://github.com/cert-manager/website/issues/662\n        azureDNS:\n          subscriptionID: ${addons.dnsZoneId.split('/')[2]}\n          resourceGroupName: ${addons.dnsZoneId.split('/')[4]}\n          hostedZoneName: ${addons.dnsZoneId.split('/')[8]}\n          managedIdentity:\n            # client id of the node pool managed identity (can not be set at the same time as resourceID)\n            # https://github.com/tomasfreund/website/blob/ee75bf5685474c651d08750ecfe3a150de5eb586/content/en/docs/configuration/acme/dns01/azuredns.md\n            clientID: $(az aks show -g ${deploy.rg} -n ${aks} --query identityProfile.kubeletidentity.clientId -o tsv)\n\n    */\n\n    (addons.ingress !== 'none' && addons.certMan ? `\n# --------------------\n# Install cert-manager\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nkubectl apply -f https://github.com/jetstack/cert-manager/releases/download/${addons.ingress === 'appgw' ? 'v1.5.3' : 'v1.6.0'}/cert-manager.yaml\n${cluster.apisecurity === \"private\" ? `\"` : ``}\n# Wait for cert-manager to install\nsleep 30s\n\ncat >/tmp/aks-issuer.yml<<EOF\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    # The ACME server URL\n    server: https://acme-v02.api.letsencrypt.org/directory\n    # Email address used for ACME registration\n    email: ${addons.certEmail}\n    # Name of a secret used to store the ACME account private key\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    # Enable the HTTP-01 challenge provider\n    solvers:\n    - http01:\n        ingress:\n          class: ${(addons.ingress === 'contour' ? 'contour' : (addons.ingress === 'nginx' ? \"nginx\" : \"azure/application-gateway\"))}\nEOF\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks} --command \"kubectl apply -f ./aks-issuer.yml\" --file  /tmp/aks-issuer.yml`\n:\n `kubectl apply -f /tmp/aks-issuer.yml`}\n` : '')\n\n  return (\n\n    <Stack tokens={{ childrenGap: 15 }} styles={adv_stackstyle}>\n      {!allok &&\n        <MessageBar messageBarType={MessageBarType.severeWarning}>\n          <Text >Configuration not complete, please correct the tabs with the warning symbol <b>({invalidTabs.join(' & ')})</b> before deploying</Text>\n        </MessageBar>\n      }\n      <Stack horizontal styles={{ root: { width: \"100%\" } }} tokens={{ childrenGap: 50 }}>\n        <Stack tokens={{ childrenGap: 10 }} styles={{ root: { width: \"400px\" } }}>\n\n          <Separator ><div style={{ display: \"flex\", alignItems: 'center', }}><b style={{ marginRight: '10px' }}>Environment Name & Location</b></div> </Separator>\n\n          <TextField label=\"Cluster Name\" onChange={(ev, val) => updateFn('clusterName', val)} required errorMessage={getError(invalidArray, 'clusterName')} value={deploy.clusterName} />\n          <TextField id=\"azResourceGroup\" label=\"Resource Group\" onChange={(ev, val) => updateFn('rg', val)} required errorMessage={getError(invalidArray, 'rg')} value={deploy.rg} />\n          <TextField label=\"Kubernetes version\" prefix=\"Current GA Version\" readOnly={false} disabled={false} required value={deploy.kubernetesVersion} onChange={(ev, val) => updateFn('kubernetesVersion', val)} />\n\n          <Dropdown\n            data-testid=\"deploy-location-Dropdown\"\n            label=\"Location\"\n            selectedKey={deploy.location}\n            onChange={(ev, { key }) => updateFn('location', key)}\n            options={[\n              { key: 'europe', text: 'Europe', itemType: DropdownMenuItemType.Header },\n              { key: \"WestEurope\", text: \"West Europe\" },\n              { key: \"NorthEurope\", text: \"North Europe\" },\n              { key: \"UKSouth\", text: \"UK South\" },\n              { key: \"UKSouth2\", text: \"UK South2\" },\n              { key: \"UKWest\", text: \"UK West\" },\n              { key: 'america', text: 'North America', itemType: DropdownMenuItemType.Header },\n              { key: \"CentralUS\", text: \"Central US\" },\n              { key: \"EastUS\", text: \"East US\" },\n              { key: \"EastUS2\", text: \"East US2\" },\n              { key: \"WestUS\", text: \"West US\" },\n              { key: \"WestUS2\", text: \"West US2\" },\n              { key: \"WestCentralUS\", text: \"West Central US\" }\n            ]}\n            styles={{ dropdown: { width: 300 } }}\n          />\n        </Stack>\n        <Stack tokens={{ childrenGap: 20 }} styles={{ root: { width: \"400px\" } }}>\n\n          <Separator ><div style={{ display: \"flex\", alignItems: 'center', }}><b style={{ marginRight: '10px' }}>Environment Access & Build Agents</b></div> </Separator>\n\n          <TextField label=\"Current IP Address\" prefix=\"IP or Cidr , separated\" errorMessage={getError(invalidArray, 'apiips')} onChange={(ev, val) => updateFn(\"apiips\", val)} value={deploy.apiips} required={cluster.apisecurity === \"whitelist\"} />\n\n          <Stack.Item>\n            <Label>Grant AKS Cluster Admin Role <a target=\"_target\" href=\"https://docs.microsoft.com/en-gb/azure/aks/manage-azure-rbac#create-role-assignments-for-users-to-access-cluster\">docs</a></Label>\n            <Checkbox disabled={cluster.enable_aad === false || cluster.enableAzureRBAC === false} checked={deploy.clusterAdminRole} onChange={(ev, v) => updateFn(\"clusterAdminRole\", v)} label=\"Assign deployment user 'ClusterAdmin'\" />\n            <Checkbox disabled={cluster.apisecurity !== \"whitelist\"}  onChange={(ev, val) => updateFn(\"clusterIPWhitelist\", val)} checked={deploy.clusterIPWhitelist} label=\"Add current IP to AKS firewall (applicable to AKS IP ranges)\"  />\n          </Stack.Item>\n\n          <Stack.Item>\n            <Label>Grant Azure Container Registry (ACR) Push role </Label>\n            <Checkbox disabled={addons.registry === \"none\"} checked={deploy.acrPushRole} onChange={(ev, v) => updateFn(\"acrPushRole\", v)} label=\"Assign deployment user 'AcrPush'\" />\n          </Stack.Item>\n\n          <Stack.Item>\n            <Label>Grant Key Vault Certificate and Secret Officer role <a target=\"_target\" href=\"https://docs.microsoft.com/azure/key-vault/general/rbac-guide?tabs=azure-cli#azure-built-in-roles-for-key-vault-data-plane-operations\">docs</a></Label>\n            <Checkbox disabled={addons.csisecret !== 'akvNew'} checked={deploy.kvCertSecretRole} onChange={(ev, v) => updateFn(\"kvCertSecretRole\", v)} label=\"Assign deployment user Certificate and Secret Officer\" />\n            <Checkbox disabled={addons.csisecret !== 'akvNew' || !net.vnetprivateend} checked={deploy.kvIPAllowlist} onChange={(ev, v) => updateFn(\"kvIPAllowlist\", v)} label=\"Add current IP to KeyVault firewall (applicable to private link)\" />\n          </Stack.Item>\n\n        </Stack>\n\n      </Stack>\n\n      <Separator styles={{ root: { marginTop: '30px !important' } }}><div style={{ display: \"flex\", alignItems: 'center', }}><b style={{ marginRight: '10px' }}>Deploy Cluster</b><Image src=\"./bicep.png\" /> <p style={{ marginLeft: '10px' }}>powered by Bicep</p></div> </Separator>\n\n      {Object.keys(preview_params).length > 0 &&\n        <MessageBar messageBarType={MessageBarType.warning}>\n          <Text >Your deployment contains Preview features: <b>{Object.keys(preview_params).join(', ')}</b>, Ensure you have registered for these previews, and have installed the <b>'az extension add --name aks-preview'</b>  before running the script, <Link target=\"_pv\" href=\"https://github.com/Azure/AKS/blob/master/previews.md\">see here</Link>, or disable preview features here</Text>\n          <Toggle styles={{ root: { marginTop: \"10px\" } }} onText='preview enabled' offText=\"preview disabled\" checked={!deploy.disablePreviews} onChange={(ev, checked) => updateFn(\"disablePreviews\", !checked)} />\n        </MessageBar>\n\n      }\n\n\n      <Pivot >\n\n        <PivotItem headerText=\"Provision Environment (CLI)\"  >\n\n          <Label style={{marginTop: '10px'}}>Commands to deploy your fully operational environment</Label>\n          <Text>\n            Requires <Link target=\"_bl\" href=\"https://docs.microsoft.com/cli/azure/install-azure-cli\">AZ CLI</Link>, or, execute in the\n            <Link target=\"_cs\" href=\"http://shell.azure.com/\">Azure Cloud Shell</Link>.\n\n          </Text>\n\n          <CodeBlock deploycmd={deploycmd} testId={'deploy-deploycmd'}/>\n\n          { urlParams.toString() !== \"\" &&\n            <Text variant=\"medium\">Not ready to deploy? Bookmark your configuration : <a href={\"?\" + urlParams.toString()}>here</a></Text>\n          }\n\n\n\n        </PivotItem>\n\n        <PivotItem headerText=\"Post Configuration\">\n          {addons.gitops === 'none' ? [\n\n              <Label key=\"post-label\" style={{marginTop: '10px'}}>Commands to install kubernetes packages into your cluster</Label>,\n\n              <Text key=\"post-text\">Requires <Link target=\"_bl\" href=\"https://helm.sh/docs/intro/install/\">Helm</Link></Text>,\n\n              <CodeBlock key=\"post-code\" deploycmd={postscript}/>\n\n          ] :\n            <Stack>\n\n              <TextField readOnly={true} label=\"While Gitops is in preview, run this manually\" styles={{ root: { fontFamily: 'SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace!important' }, field: { backgroundColor: 'lightgrey', lineHeight: '21px' } }} multiline rows={6} value={`az k8sconfiguration create\n        --name cluster-config\n        --cluster-name ${aks}\n        --resource-group ${deploy.rg}\n        --operator-instance-name flux\n        --operator-namespace cluster-config\n        --enable-helm-operator\n        --operator-params='--git-readonly --git-path=cluster-config'\n        --repository-url git://github.com/khowling/aks-deploy-arm.git\n        --scope cluster\n        --helm-operator-params='--set helm.versions=v3'\n        --cluster-type managedclusters`} />\n\n            </Stack>\n          }\n        </PivotItem>\n\n        <PivotItem headerText=\"Template Parameters File (for CI/CD)\">\n\n          <TextField value={param_file} rows={param_file.split(/\\r\\n|\\r|\\n/).length + 1} readOnly={true} label=\"Parameter file\" styles={{ root: { fontFamily: 'SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace!important' }, field: { backgroundColor: 'lightgrey', lineHeight: '21px' } }} multiline  >\n          </TextField>\n\n        </PivotItem>\n      </Pivot>\n\n    </Stack>\n  )\n}","import React from 'react';\nimport { Checkbox, Pivot, PivotItem, Image, TextField, Separator, Stack,  Label, MessageBar, MessageBarType } from '@fluentui/react';\n\nimport { adv_stackstyle, CodeBlock } from './common'\n\nexport default function AppsTab({  tabValues }) {\n\n    const { addons, deploy, net, cluster } = tabValues\n    const aks = `aks-${deploy.clusterName}`\n\n    const deploycmd = `\n# Build app\nexport ACRNAME=$(az acr list -g ${deploy.rg} --query [0].name -o tsv)\naz acr build -r $ACRNAME -t openjdk-demo:0.0.1  ${net.vnetprivateend ? \"--agent-pool private-pool\" : \"\"} https://github.com/khowling/e2e-tls-java-aks.git\n\n\n\n# Create backend Certificate in KeyVault\nexport KVNAME=$(az keyvault list -g ${deploy.rg} --query [0].name -o tsv)\nexport COMMON_NAME=openjdk-demo\naz keyvault certificate create --vault-name $KVNAME -n $COMMON_NAME -p \"$(az keyvault certificate get-default-policy | sed -e s/CN=CLIGetDefaultPolicy/CN=$\\{COMMON_NAME}/g )\"\n\n` +\n( addons.ingress === 'appgw' ? `\n# Wait for Cert to be issued\nsleep 1m\n\n## Create Root Cert reference in AppGW (Required for Self-Signed Cert)\naz network application-gateway root-cert create \\\\\n     --gateway-name $(az network application-gateway list -g ${deploy.rg} --query [0].name -o tsv)  \\\\\n     --resource-group ${deploy.rg} \\\\\n     --name $COMMON_NAME \\\\\n     --keyvault-secret $(az keyvault secret list-versions --vault-name $KVNAME -n $COMMON_NAME --query \"[?attributes.enabled].id\" -o tsv)\n` : '' ) + `\n# Install\nexport APPNAME=openjdk-demo\n${cluster.apisecurity === \"private\" ? `az aks command invoke -g ${deploy.rg} -n ${aks}  --command \"` : ``}\nhelm upgrade --install $APPNAME https://github.com/khowling/e2e-tls-java-aks/blob/main/openjdk-demo-3.1.0.tgz?raw=true  --set ingressType=${addons.ingress},letsEncrypt.issuer=letsencrypt-prod,image.repository=$\\{ACRNAME}.azurecr.io/openjdk-demo,image.tag=0.0.1,csisecrets.vaultname=$\\{KVNAME},csisecrets.tenantId=$(az account show --query tenantId -o tsv),csisecrets.clientId=$(az aks show -g ${deploy.rg} -n ${aks} --query addonProfiles.azureKeyvaultSecretsProvider.identity.clientId -o tsv),dnsname=$\\{APPNAME}.${addons.dnsZoneId.split('/')[8]}\n${cluster.apisecurity === \"private\" ? `\"` : ``}\n`\n\n    return (\n        <Stack tokens={{ childrenGap: 15 }} styles={adv_stackstyle}>\n            <Pivot >\n                <PivotItem headerText=\"Secure Java\"  >\n                    <Stack tokens={{ childrenGap: 15 }} styles={adv_stackstyle}>\n\n            <Separator styles={{ root: { marginTop: '30px !important' } }}><div style={{ display: \"flex\", alignItems: 'center', }}><b style={{ marginRight: '10px' }}>Java Spring Boot Hello World</b><Image  height=\"80px\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Spring_Framework_Logo_2018.svg/245px-Spring_Framework_Logo_2018.svg.png\" /></div> </Separator>\n\n                        <Stack.Item>\n                            <Label >Simple Java Spring boot application, that uses KeyVault to generate Certs to expose Tomcat TLS endpoint, and public Ingress TLS issued by cert-manager</Label>\n\n                            <MessageBar messageBarType={MessageBarType.error}>Please ensure your deployment meets all the requirements below in order to run the demo app successfully</MessageBar>\n                            <Label>Sample App Requires</Label>\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} checked={addons.registry !== \"none\"} label=\"(Addons tab) Container Registry, for application container repository\" />\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} disabled={!net.vnetprivateend} checked={addons.acrPrivatePool} label=\"(Addons tab) Container Registry Private Pool, for container build task (required for private link only)\" />\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} checked={deploy.kvCertSecretRole} label=\"(Deploy tab) Grant Key Vault Certificate and Secret Officer\" />\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} checked={addons.csisecret === 'akvNew'} label=\"(Addons tab) CSI Secrets, for tomcat TLS certificates\" />\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} checked={addons.ingress !== 'none'} label=\"(Addons Tab) Ingress, for securely exposing app\" />\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} checked={addons.dns} label=\"(Addons Tab) external-dns, for application hostname resolution\" />\n                            <Checkbox styles={{ root: { marginLeft: '50px' }}} checked={addons.certMan} label=\"(Addons Tab) cert-manager, to generate the frontend CA signed Cert\" />\n\n                        </Stack.Item>\n                        <Stack.Item>\n                            <CodeBlock deploycmd={deploycmd}/>\n                        </Stack.Item>\n                    </Stack>\n                </PivotItem>\n                <PivotItem headerText=\".NET Microservices\"  >\n                    <Separator styles={{ root: { marginTop: '30px !important' } }}><div style={{ display: \"flex\", alignItems: 'center', }}><b style={{ marginRight: '10px' }}>TBC</b><Image  height=\"80px\" src=\"https://img.stackshare.io/service/11331/asp.net-core.png\" /></div> </Separator>\n                    <Stack.Item>\n                            <Label >.</Label>\n                    </Stack.Item>\n                    <Stack.Item>\n                            <TextField value={\"\"} rows={25} readOnly={true} styles={{ root: { fontFamily: 'Monaco, Menlo, Consolas, \"Droid Sans Mono\", Inconsolata, \"Courier New\", monospace' }, field: { backgroundColor: 'lightgrey', lineHeight: '21px' } }} multiline  />\n                    </Stack.Item>\n                </PivotItem>\n                <PivotItem headerText=\"Full Stack Typescript\">\n                    <Separator styles={{ root: { marginTop: '30px !important' } }}><div style={{ display: \"flex\", alignItems: 'center', }}><b style={{ marginRight: '10px' }}>TBC</b><Image height=\"80px\" src=\"https://sdtimes.com/wp-content/uploads/2020/06/ts-logo-256.png\" /></div> </Separator>\n                    <Stack.Item>\n                            <Label >.</Label>\n                    </Stack.Item>\n                    <Stack.Item>\n                            <TextField value={\"\"} rows={25} readOnly={true} styles={{ root: { fontFamily: 'Monaco, Menlo, Consolas, \"Droid Sans Mono\", Inconsolata, \"Courier New\", monospace' }, field: { backgroundColor: 'lightgrey', lineHeight: '21px' } }} multiline  />\n                    </Stack.Item>\n                </PivotItem>\n            </Pivot>\n        </Stack>\n    )\n}\n","\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, Link, Toggle, TooltipHost, Pivot, PivotItem, Icon, Separator, Stack, Text } from '@fluentui/react';\nimport Presents from './presets'\n\nimport NetworkTab from './networkTab'\nimport AddonsTab from './addonsTab'\nimport ClusterTab, { VMs } from './clusterTab'\nimport DeployTab from './deployTab'\nimport AppsTab from './appsTab'\n\nimport { appInsights } from '../index.js'\nimport { initializeIcons } from '@fluentui/react/lib/Icons';\ninitializeIcons();\n\n\nfunction useAITracking(componentName, key) {\n\n  useEffect(() => {\n    const start = new Date(), pagename = `${componentName}.${key}`\n    appInsights.startTrackPage(pagename)\n    return () => {\n      console.log(`exit screen ${key} ${(new Date() - start) / 1000}`)\n      appInsights.stopTrackPage(pagename,\n        { 'Component Name': componentName, 'Navigation': key },\n        { mounttime: (new Date() - start) / 1000 })\n    };\n  }, [componentName, key])\n\n}\n\nfunction Header({ entScale, setEntScale, featureFlag }) {\n  return (\n    <Stack horizontal tokens={{ childrenGap: 10 }}>\n      <img src=\"aks.svg\" alt=\"Kubernetes Service\" style={{ width: \"6%\", height: \"auto\" }}></img>\n      <Stack tokens={{ padding: 10 }}>\n        <Text variant=\"xLarge\">AKS Deploy helper</Text>\n        <Text >Provide the requirements of your AKS deployment to generate the assets to create a full operational environment, incorporating best-practices guidance. For documentation, and CI/CD samples - please refer to our <a href=\"https://github.com/Azure/AKS-Construction\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository</a></Text>\n      </Stack>\n      <Stack.Item tokens={{ padding: 10 }}>\n        <Toggle\n          label={\n            <Text nowrap>\n              Enterprise Scale{' '}\n              <TooltipHost content=\"use if you are following Enterprise Scale\">\n                <Icon iconName=\"Info\" aria-label=\"Info tooltip\" />\n              </TooltipHost>\n            </Text>\n          }\n          onText=\"Yes\"\n          offText=\"No\"\n          checked={entScale}\n          disabled={false}\n          onChange={(ev, val) => setEntScale(val)}\n        />\n      </Stack.Item>\n    </Stack>\n  )\n}\n\n\n\n/*\n *   PortalNav\n *   Main Screen of the Helper\n *   All validation should live here\n */\nexport default function PortalNav({ config }) {\n\n  console.log (`PortalNav: ${JSON.stringify(Object.keys(config))}`)\n\n  const { tabLabels, defaults, entScaleOps, defaultOps } = config\n  const [pivotkey, setPivotkey] = useState(Object.keys(tabLabels)[0])\n\n  useAITracking(\"PortalNav\", tabLabels[pivotkey])\n\n  const [urlParams, setUrlParams] = useState(new URLSearchParams(window.location.search))\n  const [invalidArray, setInvalidArray] = useState(() => Object.keys(defaults).reduce((a, c) => { return { ...a, [c]: [] } }, {}))\n\n  const featureFlag = urlParams.getAll('feature')\n\n  const [entScale, setEntScale] = useState(() => urlParams.has('entScale'))\n\n\n  const sections = entScale ? entScaleOps : defaultOps\n  const [selected, setSelected] = useState(() => { return {\n        values: sections.reduce((a, s) => {\n            return { ...a, [s.key]: urlParams.has(s.key) ? urlParams.get(s.key) : s.cards.find(c => c.default).key }\n          }, {}),\n        entScale\n      }\n    })\n\n  const [tabValues, setTabValues] = useState(() => {\n    const clusterName = `az-k8s-${(Math.floor(Math.random() * 900000) + 100000).toString(36)}`\n\n    // Apply selected presets to tab values\n    const tabApplySections = Object.keys(selected.values).reduce((acc,curr) =>\n      updateTabValues (acc, sections, curr, selected.values[curr])\n    , defaults)\n\n    // Apply dynamic presets to tab values\n    const dynamicApplySections = {\n      ...tabApplySections,\n      deploy: {\n        ...tabApplySections.deploy,\n        clusterName,\n        rg: `${clusterName}-rg`\n      }\n    }\n    // Apply url params to tab values\n    const urlApplySections = Object.keys(dynamicApplySections).reduce((acct, currt) => {\n        return {\n          ...acct,\n          [currt]: Object.keys(dynamicApplySections[currt]).reduce((accv, currv) => {\n            const urlname = `${currt}.${currv}`\n            let valres =  dynamicApplySections[currt][currv]\n            if (urlParams.has(urlname)) {\n              let val = urlParams.get(urlname)\n              valres = val === \"true\" ? true : val === \"false\" ? false : isNaN(val) ? val : parseInt(val)\n            }\n            return {...accv, [currv]: valres }}, {})\n        }\n    }, {})\n\n    return  urlApplySections\n  })\n\n\n  function updateTabValues (currenttabValues, sections, sectionKey, cardKey) {\n    const card_values = sections.find(s => s.key === sectionKey).cards.find(c => c.key === cardKey).values\n    console.log (`updateTabValues: sectionKey=${sectionKey} cardKey=${cardKey}, setting tabs ${JSON.stringify(Object.keys(card_values))}`)\n    return Object.keys(card_values).reduce((acc, curr) => {\n      return {\n        ...acc,\n        [curr]: {\n          ...acc[curr],\n          // resolve conditional params\n          ...Object.keys(card_values[curr]).reduce((a, c) => {\n            const val = card_values[curr][c]\n            //console.log (`updateTabValues: looking for conditional value=${JSON.stringify(val)}`)\n            // if value is array with at least 1 element with a object that has a properly 'set'\n            const targetVal = Array.isArray(val) && val.length > 0 && typeof val[0] === 'object' && val[0].hasOwnProperty(\"set\") ?\n              val.reduce((a, c) => a === undefined ? (c.page && c.field ? (currenttabValues[c.page][c.field] === c.value ? c.set : undefined) : c.set) : a, undefined)\n              :\n              val\n            //console.log(`updateTabValues: setting tab=${curr}, field=${c} val=${JSON.stringify(val)} targetVal=${JSON.stringify(targetVal)}`)\n            return { ...a, [c]: targetVal }\n          }, {})\n        }\n      }\n    }, currenttabValues)\n  }\n\n  function updateSelected(sectionKey, cardKey) {\n\n    setUrlParams((currentUrlParams) => {\n\n      if (selected.entScale !== entScale) {\n        console.log (`User changed entScale switch, and selected a new card, need to unselect old cards`)\n        defaultOps.forEach(element => {\n          currentUrlParams.delete(element.key)\n        })\n        entScaleOps.forEach(element => {\n          currentUrlParams.delete(element.key)\n        })\n      }\n\n      if (entScale) {\n        currentUrlParams.set('entScale', 1)\n      } else {\n        currentUrlParams.delete('entScale')\n      }\n      currentUrlParams.set(sectionKey,cardKey)\n      return currentUrlParams\n    })\n\n\n    console.log (`updateSelected: sectionKey=${sectionKey} cardKey=${cardKey}`)\n    setSelected({entScale, values: { ...(selected.entScale === entScale && selected.values), [sectionKey]: cardKey }})\n    setTabValues(currentTabValues => updateTabValues(currentTabValues, sections, sectionKey, cardKey))\n\n    //window.history.replaceState(null, null, \"?\"+urlParams.toString())\n  }\n\n\n  useEffect(() => {\n    fetch('https://api.ipify.org?format=json').then(response => {\n      return response.json();\n    }).then((res) => {\n      console.log (`useEffect Get IP`)\n      setTabValues(currentTabValues => { return {\n          ...currentTabValues,\n          deploy: {\n            ...currentTabValues.deploy,\n            apiips: `${res.ip}/32`\n          }\n        }\n      })\n\n    }).catch((err) => console.error('Problem fetching my IP', err))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n  function _handleLinkClick(item) {\n    setPivotkey(item.props.itemKey)\n  }\n\n  function mergeState(tab, field, value) {\n    urlParams.set(`${tab}.${field}`, value)\n    //window.history.replaceState(null, null, \"?\"+urlParams.toString())\n    setTabValues((p) => {\n      return {\n        ...p, [tab]: {\n          ...p[tab],\n          [field]: value\n        }\n      }\n    })\n  }\n\n  function getError(page, field) {\n    return invalidArray[page].find(e => e.field === field)\n  }\n\n\n  function invalidFn(page, field, invalid, message) {\n    const e = getError(page, field)\n    if (!invalid && e) {\n      setInvalidArray((prev) => { return { ...prev, [page]: prev[page].filter((e) => e.field !== field) } })\n    } else if (invalid && !e) {\n      setInvalidArray((prev) => { return { ...prev, [page]: prev[page].concat({ field, message }) } })\n    }\n  }\n\n  const { deploy, cluster, net, addons } = tabValues\n\n  console.log (`PortalNav: Evaluating configruation warnings...`)\n  invalidFn('cluster', 'osDiskType', cluster.osDiskType === 'Ephemeral' && !VMs.find(i => i.key === cluster.vmSize).eph,\n    <Text><b>ERROR</b>: The selected VM cache is not large enough to support Ephemeral. Select 'Managed' or a VM with a larger cache</Text>)\n  invalidFn('cluster', 'aad_tenant_id', cluster.enable_aad && cluster.use_alt_aad && cluster.aad_tenant_id.length !== 36,\n    <Text>Enter Valid Directory ID</Text>)\n\n  invalidFn('addons', 'registry', net.vnetprivateend && (addons.registry !== 'Premium' && addons.registry !== 'none'),\n    <Text><b>ERROR</b>: Premium tier is required for Private Link, either select Premium, or disable Private Link</Text>)\n  invalidFn('addons', 'dnsZoneId', addons.dns && !addons.dnsZoneId.match('^/subscriptions/[^/ ]+/resourceGroups/[^/ ]+/providers/Microsoft.Network/(dnszones|privateDnsZones)/[^/ ]+$'),\n    <Text>Enter valid Azure Public or Private DNS Zone resourceId</Text>)\n  invalidFn('addons', 'certEmail', addons.certMan && !addons.certEmail.match('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$'),\n    <Text>Enter valid email for certificate generation</Text>)\n  invalidFn('addons', 'kvId', addons.csisecret === \"akvExist\" && !addons.kvId.match('^/subscriptions/[^/ ]+/resourceGroups/[^/ ]+/providers/Microsoft.KeyVault/vaults/[^/ ]+$'),\n    <Text>Enter valid Azure KeyVault resourceId</Text>)\n  invalidFn('addons', 'appgw_privateIpAddress', addons.ingress === \"appgw\" && addons.appgw_privateIp && !addons.appgw_privateIpAddress.match('^(?:[0-9]{1,3}.){3}[0-9]{1,3}$'),\n    <Text>Enter valid IP address</Text>)\n  invalidFn('addons', 'appgwKVIntegration', addons.ingress === \"appgw\" && addons.appgwKVIntegration && addons.csisecret !== 'akvNew',\n    <Text><b>ERROR</b>: KeyVault integration requires the 'CSI Secrets' 'Yes, Provision a new KeyVault' option to be selected</Text>)\n  invalidFn('addons', 'ingress', net.afw && (addons.ingress !== \"none\" && addons.ingress !== \"appgw\"),\n    <Text><b>WARNING</b>: Using a in-cluster ingress option with Azure Firewall will require additional asymmetric routing configuration post-deployment, please see <Link target=\"_target\" href=\"https://docs.microsoft.com/en-us/azure/aks/limit-egress-traffic#add-a-dnat-rule-to-azure-firewall\">Add a DNAT rule to Azure Firewall</Link></Text>)\n  invalidFn('net', 'byoAKSSubnetId', net.vnet_opt === 'byo' && !net.byoAKSSubnetId.match('^/subscriptions/[^/ ]+/resourceGroups/[^/ ]+/providers/Microsoft.Network/virtualNetworks/[^/ ]+/subnets/[^/ ]+$'),\n    <Text>Enter a valid Subnet Id where AKS nodes will be installed</Text>)\n  invalidFn('net', 'byoAGWSubnetId', net.vnet_opt === 'byo' && addons.ingress === 'appgw' && !net.byoAGWSubnetId.match('^/subscriptions/[^/ ]+/resourceGroups/[^/ ]+/providers/Microsoft.Network/virtualNetworks/[^/ ]+/subnets/[^/ ]+$'),\n    <Text>Enter a valid Subnet Id where Application Gateway is installed</Text>)\n  invalidFn('net', 'vnet_opt', net.vnet_opt === \"default\" && (net.afw || net.vnetprivateend),\n    <Text>Cannot use default networking of you select Firewall or Private Link</Text>)\n  invalidFn('net', 'afw', net.afw && net.vnet_opt !== \"custom\",\n    net.vnet_opt === \"byo\" ?\n      <Text>Please de-select, when using Bring your own VNET, configure a firewall as part of your own VNET setup, (in a subnet or peered network)</Text>\n      :\n      <Text><b>WARNING</b>: This template can only deploy Azure Firewall in single VNET with Custom Networking\"</Text>\n  )\n  invalidFn('deploy', 'apiips', cluster.apisecurity === 'whitelist' && deploy.apiips.length < 7,\n    <Text>Enter an IP/CIDR, or disable API Security in 'Cluster Details' tab</Text>)\n  invalidFn('deploy', 'clusterName', !deploy.clusterName || deploy.clusterName.match(/^[a-z0-9][_\\-a-z0-9]+[a-z0-9]$/i) === null || deploy.clusterName.length>19,\n    <Text>Enter valid cluster name</Text>)\n\n\n  function _customRenderer(page, link, defaultRenderer) {\n    return (\n      <span>\n        {invalidArray[page].length > 0 &&\n          <Icon iconName=\"Warning12\" style={{ color: 'red' }} />\n        }\n        {defaultRenderer(link)}\n      </span>\n    );\n  }\n\n  return (\n    <main id=\"mainContent\" className=\"wrapper\">\n      <ThemeProvider>\n        <Header entScale={entScale} setEntScale={setEntScale} featureFlag={featureFlag} />\n\n\n        <Stack verticalFill styles={{ root: { width: '960px', margin: '0 auto', color: 'grey' } }}>\n\n          <Presents sections={sections} selectedValues={selected.values} updateSelected={updateSelected} featureFlag={featureFlag} />\n\n          <Separator styles={{ root: { marginTop: \"55px !important\", marginBottom: \"5px\" } }}><b>Deploy</b> (optionally use 'Details' tabs for additional configuration)</Separator>\n\n          <Pivot selectedKey={pivotkey} onLinkClick={_handleLinkClick} focusZoneProps={{ 'data-testid': `portalnav-Pivot`}}>\n            <PivotItem headerText={tabLabels.deploy} itemKey=\"deploy\" onRenderItemLink={(a, b) => _customRenderer('deploy', a, b)}>\n              <DeployTab defaults={defaults} tabValues={tabValues} updateFn={(field, value) => mergeState(\"deploy\", field, value)} invalidArray={invalidArray['deploy']} invalidTabs={Object.keys(invalidArray).filter(t => invalidArray[t].length > 0).map(k => `'${tabLabels[k]}'`)} urlParams={urlParams} />\n            </PivotItem>\n            <PivotItem headerText={tabLabels.cluster} itemKey=\"cluster\" onRenderItemLink={(a, b) => _customRenderer('cluster', a, b)} >\n              <ClusterTab tabValues={tabValues} featureFlag={featureFlag} updateFn={(field, value) => mergeState(\"cluster\", field, value)} invalidArray={invalidArray['cluster']} />\n            </PivotItem>\n            <PivotItem headerText={tabLabels.addons} itemKey=\"addons\" onRenderItemLink={(a, b) => _customRenderer('addons', a, b)} >\n              <AddonsTab tabValues={tabValues} updateFn={(field, value) => mergeState(\"addons\", field, value)} invalidArray={invalidArray['addons']} />\n            </PivotItem>\n            <PivotItem headerText={tabLabels.net} itemKey=\"net\" onRenderItemLink={(a, b) => _customRenderer('net', a, b)}>\n              <NetworkTab tabValues={tabValues} featureFlag={featureFlag} updateFn={(field, value) => mergeState(\"net\", field, value)} invalidArray={invalidArray['net']} />\n            </PivotItem>\n            <PivotItem headerText={tabLabels.app} itemKey=\"app\" onRenderItemLink={(a, b) => _customRenderer('app', a, b)}>\n              <AppsTab tabValues={tabValues} featureFlag={featureFlag} updateFn={(field, value) => mergeState(\"app\", field, value)} invalidArray={invalidArray['app']} />\n            </PivotItem>\n          </Pivot>\n\n        </Stack>\n      </ThemeProvider>\n    </main >\n  )\n}\n\n\n\n","import React from 'react';\nimport { ConfigContext } from './index'\nimport PortalNav from './components/portalnav'\n\nexport default function App() {\n\n  return (\n    <ConfigContext.Consumer>\n      {config => <PortalNav config={config} />}\n    </ConfigContext.Consumer>\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated pre-cached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Application Insights - https://github.com/microsoft/ApplicationInsights-JS/tree/master/extensions/applicationinsights-react-js\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport configData from \"./config.json\";\n\nexport const appInsights = new ApplicationInsights({\n  config: { instrumentationKey: process.env.REACT_APP_APPINSIGHTS_KEY }\n});\nif (process.env.REACT_APP_APPINSIGHTS_KEY) {\n  appInsights.loadAppInsights();\n}\n\nexport const ConfigContext = React.createContext()\n\nReactDOM.render(\n  <ConfigContext.Provider value={configData}>\n    <App />\n  </ConfigContext.Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}